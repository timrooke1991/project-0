"use strict";var _slicedToArray=function(){function e(e,a){var o=[],s=!0,t=!1,n=void 0;try{for(var r,l=e[Symbol.iterator]();!(s=(r=l.next()).done)&&(o.push(r.value),!a||o.length!==a);s=!0);}catch(e){t=!0,n=e}finally{try{!s&&l.return&&l.return()}finally{if(t)throw n}}return o}return function(a,o){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return e(a,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function e(e){$(".team-panel").html(""),$(".formation").val(e.formation),e.players.sort(function(e,a){return z.indexOf(e.position)<z.indexOf(a.position)?-1:1});for(var a=0;a<e.players.length;a++){var o=e.players[a],s=o.playing?"&#10004;":"&#10007;";$(".team-panel").append('<p class="player-line '+o.position+" "+o.status+"\" id='"+o.name+"'>\n          <span class=\"starting "+o.status+'" id="'+a+'">'+s+'</span>\n          <span class="player-position ">'+o.position+'</span>\n          <span class="player-name">'+o.name+'</span>\n          <span class="player-stat">'+o.attack+'</span>\n          <span class="player-stat">'+o.defence+'</span>\n          <span class="player-stat">'+o.creativity+'</span>\n          <span class="player-stat">'+o.defence+"</span>\n        </p>")}}function a(e){$(".team-display").html("");var a=["1"].concat(e.formation.split("-")),o=0,s=0;try{a.map(function(a){for(var t=parseFloat(a),n=0;n<t;){if(e.players[o].playing){var r=z[s]!==e.players[o].position?"warning":"";$(".team-display").append("<span class='player-block "+r+" "+e.players[o].status+"'>"+e.players[o].name+"</span>"),e.players[o].chosenPosition=z[s],n++}console.log(o),o++}$(".team-display").append('<div class="seperate-players">'),s++})}catch(e){$(".team-display").append("<p class='team-selection-warning seperate-players'>Less than 11 players selected!</p>")}}function o(e,o){if(e.players[o].playing=!e.players[o].playing,a(w),e.players[o].playing){if($("#"+o).html("&#10004;"),E){console.log("clicked"),$("#"+o).parent().css({background:"green"});var t=e.players[o];s(e,t)}}else if($("#"+o).html("&#10007;"),E){$("#"+o).parent().css({"pointer-events":"none",background:"red"});var n=e.players[o];s(e,n)}}function s(e,a){e.subs<6?a.playing?($("#"+e.place+"Events").append("<i class='fa fa-arrow-right' style='font-size: 22px; color:green; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+a.name+" substituted<br/>"),e.subs+=1,a.playing=!0):($("#"+e.place+"Events").append("<i class='fa fa-arrow-right' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+a.name+" substituted<br/>"),e.subs+=1,a.playing=!1,a.status="ejected"):alert("You have had 3 subs!")}function t(){44===x&&(g.text("That's half-time!"),P=!P,b.text("Play")),90===x?(g.text("That's full-time!"),clearInterval(j),b.text("Finish")):(x++,f.text(x))}function n(e){return Math.floor(Math.random()*e)}function r(){var e=document.getElementById("homeBar");T=B.averagePlayerValues("creativity")/(B.averagePlayerValues("creativity")+F.averagePlayerValues("creativity"))*100+(Math.random()<.5?-n(6):n(6)),console.log(B.averagePlayerValues("creativity")),console.log(F.averagePlayerValues("creativity")),e.style.width=T+"%"}function l(){return n(B.averagePlayerValues("creativity"))>=n(F.averagePlayerValues("creativity"))?(g.css("background-color",B.colors[0]),g.css("color",B.colors[1]),n(20)%4==0&&g.text(u("chance","")),[B,"home",F]):(g.css("background-color",F.colors[0]),g.css("color",F.colors[1]),n(20)%4==0&&g.text(u("chance","")),[F,"away",B])}function i(e,a,o){var s=null,t=null,r=e.randomPlayer(),l=o.randomPlayerByPosition("defender");n(r.attack)>n(l.defence)&&("home"===a?(t=v.text(),s=parseFloat(t)+1,v.text(s)):(t=k.text(),s=parseFloat(t)+1,k.text(s)),u("goal",r),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+r.name+" scored<br/>"))}function c(e,a,o){console.log("YELLOW");var s=o.randomPlayer(),t="home"===a?"away":"home";n(s.discipline)+(100-x)<90&&"ejected"!==s.status&&("yellow"===s.status?(g.css("background-color","#FF0000"),g.css("color","#FFFFFF"),u("secondYellow",s),$("#"+t+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" sent off<br/>"),s.status="injured"):(g.css("background-color","yellow"),g.css("color","#000000"),u("yellow",s),$("#"+t+"Events").append("\n          <i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" booked<br/>"),s.status="yellow"))}function p(e,a){var o=e.randomPlayer();if(n(101)%8==0)if(u("injury",o),$("#"+a+"Events").append("<i class='fa fa-plus' style='font-size: 26px; color: green; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" injured<br/>"),"away"===e.place){o.playing=!o.playing,s(F,o);var t=F.randomSubstitute(o.position);t.playing=!t.playing,s(F,t)}else"home"===e.place&&(o.status="ejected",o.playing=!1);else g.text(o.name+"'s limping, but he'll be okay")}function m(e,a,o){var s=e.randomPlayerByPosition("midfielder"),t=o.randomPlayerByPosition("goalkeeper").defence+o.averagePlayerValues("defender");if(s.attack>t){var n=null,r=null;"home"===a?(r=v.text(),n=parseFloat(r)+1,v.text(n)):(r=k.text(),n=parseFloat(r)+1,k.text(n)),u("freekick",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" scored<br/>")}else u("wastedFreekick",s)}function d(e,a,o){var s=e.randomPlayerByPosition("striker"),t=o.randomPlayerByPosition("goalkeeper"),r=o.randomPlayerByPosition("defender"),l="home"===a?"away":"home";if(n(100)>25&&(r.status="yellow",$("#"+l+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+r.name+" booked<br/>")),2*n(s.attack)>n(t.defence)){var i=null,c=null;"home"===a?(c=v.text(),i=parseFloat(c)+1,v.text(i)):(c=k.text(),i=parseFloat(c)+1,k.text(i)),u("penalty",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" scores penalty<br/>")}else u("missedPenalty",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" missed penalty<br/>")}function y(e,a){var o=e.randomPlayer();if(n(o.discipline)<25){o.playing=!1;var s="home"===a?"away":"home";u("straightRed",o),$("#"+s+"Events").append("<i class='fa fa-square' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" sent off<br/>")}}function h(e,a){if(null===B){switch($(".home-team  .team-name").text(a),a){case"Tottenham":B=spurs,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Man United":B=manUnited,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Liverpool":B=liverpool,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Man City":B=manCity,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Everton":B=everton,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Chelsea":B=chelsea,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Leicester":B=leicester,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1]);break;case"Arsenal":B=arsenal,$(".home-team, #homeBar").css("background-color",B.colors[0]),$(".home-team").css("color",B.colors[1])}B.place="home",console.log(B)}else{switch($(".away-team .team-name").text(a),a){case"Tottenham":F=spurs,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Man United":F=manUnited,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Liverpool":F=liverpool,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Man City":F=manCity,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Everton":F=everton,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Chelsea":F=chelsea,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Leicester":F=leicester,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Arsenal":F=arsenal,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1])}F.place="away",console.log(F)}console.log(a)}function u(e,a){var o={goal:["Goal!","He's scored!","That's a great finish!","What a goal by "+a.name,a.name+" finishes off the move!"],freekick:["It's a freekick",a.name+" to take the freekick","He lines up the freekick","This is a chance to get a cross in"],wastedFreekick:[a.name+" loses possession","That's ended up in row Z","The attack amounts to nothing",a.name+" has wasted that opportunity",a.name+"'s effort goes over the bar","He hands back possession to the other team"],yellow:["He's going in the book","Ouch! "+a.name+" will get a yellow for that","That's a booking","It's a yellow!","The ref is taking his name"],secondYellow:["He's already been booked...","That's a second yellow",a.name+" is shown a red!",a.name+" is off"],straightRed:[a.name+" is shown a straight red!",a.name+" is off","The ref has given him straight red!"],penalty:["The referee points to the spot","That's a penalty",a.name+" is fouled in the area","The ref blows his whistle. Penalty."],missedPenalty:["Saved!","It's over the bar",a.name+" has missed it!","Oh dear! "+a.name+"'s put it wide'"],injury:[a.name+"'s is going off",a.name+" is injured",a.name+" can't continue"],chance:["The ball is wasted","Possession is sloppily given away","That is wasted","The referee pulls back play","The ball goes out for a throw","Good interception!","He's robbed him of possesion"]},s=n(o[e].length),t=o[e][s];g.text(""+t)}var f=$(".changing-minutes"),g=$("#commentaryBox"),b=$(".primary-button"),v=$(".home-team .score"),k=$(".away-team .score"),w=null,x=0,P=!1,T=50,B=null,F=null,E=!1,z=["goalkeeper","defender","midfielder","striker"],j=setInterval(function(){if(P){var e=n(100)+1;console.log(x+": "+e);var a=l(),o=_slicedToArray(a,3),h=o[0],u=o[1],f=o[2];if(e%18==0&&i(h,u,f),e%80==0&&d(h,u,f),e%90==0&&y(f,u),e%22==0&&m(h,u,f),e%14==0&&c(h,u,f),e%10==0&&p(h,u),e%10==0&&F.subs<6&&x>50){var g=n(z.length)+1,b=z[g];if(console.log(g),console.log(b),z[g]){var v=F.randomPlayerByPosition(b);v.playing=!v.playing,s(F,v);var k=F.randomSubstitute(b);k.playing=!k.playing,s(F,k)}}r(),t()}},200);$(".team-input").on("click",function(e){var a=e.target.innerHTML;null===B?(h(B,a),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(h(F,a),console.log("awayTeam now selected!"),$(".title-message").text("Opponent selected. Now edit tactics or proceed to match."))}),$("#revealTeam").on("click",function(){a(w)}),$(".team-panel").on("click",function(e){var a=e.target.id;o(w,a)}),b.on("click",function(){P=!P,$("#match-setup, .info-message, .team-setup").hide(),$("#match-engine, .away-team, .home-team, .timer").show(),P?(b.text("Pause"),E=!0):b.text("Play")}),$("#homeTeam").on("click",function(){P&&(P=!P),b.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(B),w=B,a(w)}),$("#awayTeam").on("click",function(){P&&(P=!P),b.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(F),w=F,a(w)}),$(".go-back").on("click",function(){$(".team-setup").hide(),$(".match-setup").show()}),$(".formation").on("change",function(e){var o=e.target.value;w.formation=o,a(w)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
