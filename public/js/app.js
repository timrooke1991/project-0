"use strict";var _slicedToArray=function(){function o(o,a){var e=[],s=!0,r=!1,c=void 0;try{for(var t,l=o[Symbol.iterator]();!(s=(t=l.next()).done)&&(e.push(t.value),!a||e.length!==a);s=!0);}catch(o){r=!0,c=o}finally{try{!s&&l.return&&l.return()}finally{if(r)throw c}}return e}return function(a,e){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return o(a,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function o(){44===u&&(n.text("That's half-time!"),y=!y,m.text("Play")),90===u?(clearInterval(g),m.text("Finish")):(u++,l.text(u))}function a(o){return Math.floor(Math.random()*o)}function e(){var o=document.getElementById("homeBar");h=d.averagePlayerValues("attack")+a(10),o.style.width=h+"%"}function s(){return a(d.averagePlayerValues("attack"))>=a(b.averagePlayerValues("attack"))?(n.css("background-color",d.colors[0]),n.css("color",d.colors[1]),[d,"home"]):(n.css("background-color",b.colors[0]),n.css("color",b.colors[1]),[b,"away"])}function r(o){var a=Math.floor(Math.random()*o.players.length);return o.players[a]}function c(o,a){if(a.playing){var e=null,s=null;"home"===o?(s=i.text(),e=parseFloat(s)+1,i.text(e)):(s=p.text(),e=parseFloat(s)+1,p.text(e)),n.text("Goal!!!"),$("#"+o+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+u+" mins: "+a.name+" scored<br/>")}}function t(o,a){if(null===d){switch($(".home-team  .team-name").text(a),a){case"Tottenham":d=spurs,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Man United":d=manUnited,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Liverpool":d=liverpool,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Man City":d=manCity,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Everton":d=everton,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Chelsea":d=chelsea,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Leicester":d=leicester,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Arsenal":d=arsenal,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1])}console.log(d)}else{switch($(".away-team .team-name").text(a),a){case"Tottenham":b=spurs,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Man United":b=manUnited,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Liverpool":b=liverpool,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Man City":b=manCity,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Everton":b=everton,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Chelsea":b=chelsea,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Leicester":b=leicester,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1]);break;case"Arsenal":b=arsenal,$(".away-team, .possession-bar").css("background-color",b.colors[0]),$(".away-team").css("color",b.colors[1])}console.log(b)}console.log(a)}var l=$(".changing-minutes"),n=$("#commentaryBox"),m=$(".primary-button"),i=$(".home-team .score"),p=$(".away-team .score"),u=0,y=!1,h=50,d=null,b=null,g=setInterval(function(){if(y){var t=a(100)+1,l=s(),n=_slicedToArray(l,2),m=n[0],i=n[1],p=r(m);console.log(p),t%2==0&&c(i,p),e(),o()}},200);$(".team-input").on("click",function(o){var a=o.target.innerHTML;null===d?(t(d,a),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(t(b,a),console.log("awayTeam now selected!"),$("#match-setup, .info-message").hide(),$("#match-engine, .away-team, .home-team, .timer").show())}),$("#revealTeam").on("click",function(){$(".team-display").html("");var o=["1"].concat(spurs.formation.split("-")),a=["goalkeeper","defender","midfielder","striker"],e=0,s=0;o.map(function(o){for(var r=parseFloat(o),c=0;c<r;)spurs.players[e].playing&&($(".team-display").append("<p>"+spurs.players[e].name+": "+a[s]+"</p>"),c++),e++;s++}),console.log(o)}),$(".player-selection-box button").on("click",function(){$(".team-panel").html("");for(var o=0;o<spurs.players.length;o++){var a=spurs.players[o],e=a.playing?"&#10004;":"&#10007;";$(".team-panel").append('<p class="player-line" id=\''+a.name+'\'><span class="starting" id="'+o+'">'+e+'</span><span class="player-name">'+a.position+" "+a.name+'</span><span class="player-stat">'+a.attack+'</span><span class="player-stat">'+a.defence+"</span></p>")}}),$(".team-panel").on("click",function(o){var a=o.target.id;spurs.players[a].playing=!spurs.players[a].playing;$("#"+a).html();spurs.players[a].playing?$("#"+a).html("&#10007;"):$("#"+a).html("&#10004;")}),m.on("click",function(){y=!y,y?m.text("Pause"):m.text("Play")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwidGltZUNvbnRyb2wiLCJtYXRjaFRpbWUiLCIkY29tbWVudGFyeUJveCIsInJ1biIsIiRwcmltYXJ5QnV0dG9uIiwidGV4dCIsImNsZWFySW50ZXJ2YWwiLCJ0aW1lcklEIiwiZ2VuUmFuZG9tVmFsdWUiLCJ2YWx1ZSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIm1vdmUiLCJlbGVtIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIndpZHRoIiwiYXZlcmFnZVBsYXllclZhbHVlcyIsInNlbGVjdFRlYW0iLCJob21lVGVhbSIsImF3YXlUZWFtIiwiY3NzIiwiY29sb3JzIiwiaG9tZVJhbmRvbSIsImF3YXlSYW5kb20iLCJzZWxlY3RQbGF5ZXIiLCJ0ZWFtIiwiZ2VuUmFuZG9tSW5kZXgiLCJwbGF5ZXJzIiwibGVuZ3RoIiwiZ29hbENoYW5jZSIsInBsYXllciIsInBsYXlpbmciLCJnZXRTY29yZSIsInNjb3JlIiwiJGhvbWVTY29yZSIsInBhcnNlRmxvYXQiLCIkYXdheVNjb3JlIiwiYXBwZW5kIiwibmFtZSIsInNwdXJzIiwic2VsZWN0b3IiLCJtYW5Vbml0ZWQiLCJsaXZlcnBvb2wiLCJtYW5DaXR5IiwiZXZlcnRvbiIsImNoZWxzZWEiLCJsZWljZXN0ZXIiLCJhcnNlbmFsIiwiY29uc29sZSIsImxvZyIsIiRtYXRjaFRpbWUiLCJzZXRJbnRlcnZhbCIsIl9zZWxlY3RUZWFtIiwiX3NlbGVjdFRlYW0yIiwiX3NsaWNlZFRvQXJyYXkiLCJ0ZWFtT2JqZWN0IiwidGVhbVN0cmluZyIsImV2ZW50VmFsdWUiLCJjaG9zZW5QbGF5ZXIiLCJjb25maWdUZWFtIiwidXNlclRlYW0iLCJoaWRlIiwic2hvdyIsIm9uIiwiaHRtbCIsImZvcm1hdGlvbiIsImNvbmNhdCIsInNwbGl0IiwicG9zaXRpb25zIiwicGxheWVyTnVtYmVyIiwicG9zaXRpb25OdW1iZXIiLCJtYXAiLCJpdGVyYXRpb25zIiwiYXJyYXlJdGVtIiwiaSIsInN0YXJ0aW5nRWxldmVuIiwicG9zaXRpb24iLCJhdHRhY2siLCJkZWZlbmNlIiwiZSIsInNlbGVjdGVkUGxheWVyIiwidGFyZ2V0IiwiaWQiXSwibWFwcGluZ3MiOiJtY0FBQUEsR0FBRSxXQStJQSxRQUFTQyxLQUVVLEtBQWRDLElBRkxDLEVBQVNGLEtBQVQscUJBSUlHLEdBQU9BLEVBRlRDLEVBQUdILEtBQWtCLFNBR0pJLEtBQWZELEdBQ0RFLGNBQUFDLEdBSUNILEVBQWVDLEtBQUssWUFEcEJDLElBQ0FGLEVBQUFBLEtBQWVDLElBTWxCLFFBQUFHLEdBQUFDLEdBR0MsTUFBUUMsTUFBS0MsTUFBTUQsS0FBS0UsU0FBV0gsR0FDcEMsUUFBQUksS0FHQyxHQUFNQyxHQUFPQyxTQUFTQyxlQUFlLFVBRHZDQyxHQUFTSixFQUFPSyxvQkFBQSxVQUFBVixFQUFBLElBQ2RNLEVBQU1BLE1BQU9DLE1BQUFBLEVBQVNDLElBR3ZCLFFBQUFHLEtBSUMsTUFEb0JYLEdBQWVZLEVBQVNGLG9CQUFvQixZQUQ1Q1YsRUFBQWEsRUFBQUgsb0JBQUEsWUFLbEJoQixFQUFlb0IsSUFBSSxtQkFBb0JGLEVBQVNHLE9BQU8sSUFEekRyQixFQUFJc0IsSUFBY0MsUUFBWUwsRUFBQUcsT0FBQSxLQUM1QnJCLEVBQUEsVUFFQUEsRUFBUWtCLElBQVUsbUJBQWxCQyxFQUFBRSxPQUFBLElBSEZyQixFQUlPb0IsSUFBQSxRQUFBRCxFQUFBRSxPQUFBLEtBQ0xyQixFQUFBLFNBSUgsUUFBQXdCLEdBQUFDLEdBR0MsR0FBTUMsR0FBaUJsQixLQUFLQyxNQUFNRCxLQUFLRSxTQUFXZSxFQUFLRSxRQUFRQyxPQURqRSxPQUFTSixHQUFBQSxRQUFhQyxHQUdyQixRQUFBSSxHQUFBSixFQUFBSyxHQUdDLEdBQUlBLEVBQU9DLFFBQVMsQ0FBcEIsR0FBSUQsR0FBT0MsS0FDVEMsRUFBQSxJQUNZLFVBQVJDLEdBQ0pELEVBQUlBLEVBQUo3QixPQUNBOEIsRUFBSVIsV0FBaUJPLEdBQUEsRUFDbkJBLEVBQVdFLEtBQUFBLEtBRVhB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WixRQUFRcUQsR0FBZ0JqRCxTQUFXUSxNQUFNWixRQUFRcUQsR0FBZ0JqRCxPQUh6RWxDLEdBQUFBLElBQUFtRixHQUFBaEIsTUFDRXpCLE9BQUFaLFFBQUZxRCxHQUE2QmpELFFBQU9sQyxFQUFBQSxJQUFBbUYsR0FBQWhCLEtBQUEsWUFBQW5FLEVBQUFBLElBQUFtRixHQUFBaEIsS0FBQSxjQWNwQzlELEVBQUE2RCxHQUFBLFFBQUEsV0FDQTlELEdBQUFBLEVBSUVBLEVBQU1DLEVBQWVDLEtBQUssU0FBV0QsRUFBZUMsS0FBSyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKCgpID0+IHtcbiAgY29uc3QgJG1hdGNoVGltZSA9ICQoJy5jaGFuZ2luZy1taW51dGVzJyk7XG4gIGNvbnN0ICRjb21tZW50YXJ5Qm94ID0gJCgnI2NvbW1lbnRhcnlCb3gnKTtcbiAgY29uc3QgJHByaW1hcnlCdXR0b24gPSAkKCcucHJpbWFyeS1idXR0b24nKTtcbiAgY29uc3QgJGhvbWVTY29yZSA9ICQoJy5ob21lLXRlYW0gLnNjb3JlJyk7XG4gIGNvbnN0ICRhd2F5U2NvcmUgPSAkKCcuYXdheS10ZWFtIC5zY29yZScpO1xuICAvLyBjb25zdCAkaG9tZVRlYW0gPSAkKCcuaG9tZS10ZWFtJyk7XG4gIC8vIGNvbnN0ICRhd2F5VGVhbSA9ICQoJy5hd2F5LXRlYW0nKTtcblxuICBsZXQgbWF0Y2hUaW1lID0gMDtcbiAgbGV0IHJ1biA9IGZhbHNlO1xuICBsZXQgd2lkdGggPSA1MDtcbiAgbGV0IGhvbWVUZWFtID0gbnVsbDtcbiAgbGV0IGF3YXlUZWFtID0gbnVsbDtcblxuXG4gIC8vIE1BVENIIExPR0lDXG4gIGNvbnN0IHRpbWVySUQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICBpZiAocnVuKSB7XG5cbiAgICAgIGNvbnN0IGV2ZW50VmFsdWUgPSBnZW5SYW5kb21WYWx1ZSgxMDApICsgMTtcblxuICAgICAgY29uc3QgW3RlYW1PYmplY3QsIHRlYW1TdHJpbmddID0gc2VsZWN0VGVhbSgpO1xuICAgICAgY29uc3QgY2hvc2VuUGxheWVyID0gc2VsZWN0UGxheWVyKHRlYW1PYmplY3QpO1xuICAgICAgY29uc29sZS5sb2coY2hvc2VuUGxheWVyKTtcbiAgICAgIC8vIFdobyBoYXMgdGhlIGV2ZW50P1xuICAgICAgaWYgKGV2ZW50VmFsdWUgJSAyID09PSAwKSB7XG4gICAgICAgIGdvYWxDaGFuY2UodGVhbVN0cmluZywgY2hvc2VuUGxheWVyKTtcbiAgICAgIH1cblxuICAgICAgLy8gaWYgKGV2ZW50VmFsdWUgJSA4MCA9PT0gMCkge1xuICAgICAgLy8gICBoYW5kbGVQZW5hbHR5KGNob3NlblBsYXllciwgdGVhbVN0cmluZyk7XG4gICAgICAvLyB9XG4gICAgICAvL1xuICAgICAgLy8gaWYgKGV2ZW50VmFsdWUgJSA5NSA9PT0gMCkge1xuICAgICAgLy8gICBzdHJhaWdodFJlZChjaG9zZW5QbGF5ZXIsIHRlYW1TdHJpbmcpO1xuICAgICAgLy8gfVxuICAgICAgLy9cbiAgICAgIC8vIGlmIChldmVudFZhbHVlICUgMTIgPT09IDApIHtcbiAgICAgIC8vICAgaGFuZGxlRnJlZWtpY2soY2hvc2VuUGxheWVyLCB0ZWFtU3RyaW5nKTtcbiAgICAgIC8vIH1cbiAgICAgIC8vIGlmIChldmVudFZhbHVlICUgMjAgPT09IDApIHtcbiAgICAgIC8vICAgaGFuZGxlRGlzY2lwbGluZShjaG9zZW5QbGF5ZXIsIHRlYW1TdHJpbmcpO1xuICAgICAgLy8gfVxuICAgICAgLy9cbiAgICAgIC8vIGlmIChldmVudFZhbHVlICUgNzUgPT09IDApIHtcbiAgICAgIC8vICAgaGFuZGxlSW5qdXJ5KGNob3NlblBsYXllciwgdGVhbVN0cmluZyk7XG4gICAgICAvLyB9XG4gICAgICBtb3ZlKCk7XG4gICAgICB0aW1lQ29udHJvbCgpO1xuICAgIH1cbiAgfSwyMDApO1xuXG4gIC8vIEV2ZW50IExpc3RlbmVycyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFRlYW0gc2VsZWN0aW9uXG4gICQoJy50ZWFtLWlucHV0Jykub24oJ2NsaWNrJywgKGUpID0+IHtcbiAgICBjb25zdCB1c2VyVGVhbSA9IGUudGFyZ2V0LmlubmVySFRNTDtcbiAgICBpZiAoaG9tZVRlYW0gPT09IG51bGwpIHtcbiAgICAgIGNvbmZpZ1RlYW0oaG9tZVRlYW0sIHVzZXJUZWFtKTtcbiAgICAgIGNvbnNvbGUubG9nKCdob21lVGVhbSBub3cgc2VsZWN0ZWQhJyk7XG4gICAgICAkKCcudGl0bGUtbWVzc2FnZScpLnRleHQoJ0hvbWUgdGVhbSBjaG9zZW4uIE5vdyBjaG9zZSB5b3VyIG9wcG9uZW50LicpO1xuICAgICAgLy8gZS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uZmlnVGVhbShhd2F5VGVhbSwgdXNlclRlYW0pO1xuICAgICAgY29uc29sZS5sb2coJ2F3YXlUZWFtIG5vdyBzZWxlY3RlZCEnKTtcbiAgICAgICQoJyNtYXRjaC1zZXR1cCwgLmluZm8tbWVzc2FnZScpLmhpZGUoKTtcbiAgICAgICQoJyNtYXRjaC1lbmdpbmUsIC5hd2F5LXRlYW0sIC5ob21lLXRlYW0sIC50aW1lcicpLnNob3coKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIFN0YXJ0aW5nIExpbmUgVXBcbiAgJCgnI3JldmVhbFRlYW0nKS5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgJCgnLnRlYW0tZGlzcGxheScpLmh0bWwoJycpO1xuICAgIGNvbnN0IGZvcm1hdGlvbiA9IFsnMSddLmNvbmNhdChzcHVycy5mb3JtYXRpb24uc3BsaXQoJy0nKSk7XG4gICAgY29uc3QgcG9zaXRpb25zID0gWydnb2Fsa2VlcGVyJywgJ2RlZmVuZGVyJywgJ21pZGZpZWxkZXInLCAnc3RyaWtlciddO1xuICAgIGxldCBwbGF5ZXJOdW1iZXIgPSAwO1xuICAgIGxldCBwb3NpdGlvbk51bWJlciA9IDA7XG5cbiAgICBmb3JtYXRpb24ubWFwKChhcnJheUl0ZW0pID0+IHtcbiAgICAgIGNvbnN0IGl0ZXJhdGlvbnMgPSBwYXJzZUZsb2F0KGFycmF5SXRlbSk7XG4gICAgICBsZXQgaSA9IDA7XG4gICAgICB3aGlsZSAoaSA8IGl0ZXJhdGlvbnMpIHtcbiAgICAgICAgaWYgKHNwdXJzLnBsYXllcnNbcGxheWVyTnVtYmVyXS5wbGF5aW5nKSB7XG4gICAgICAgICAgJCgnLnRlYW0tZGlzcGxheScpLmFwcGVuZChgPHA+JHtzcHVycy5wbGF5ZXJzW3BsYXllck51bWJlcl0ubmFtZX06ICR7cG9zaXRpb25zW3Bvc2l0aW9uTnVtYmVyXX08L3A+YCk7XG4gICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHBsYXllck51bWJlcisrO1xuICAgICAgfVxuICAgICAgcG9zaXRpb25OdW1iZXIrKztcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyhmb3JtYXRpb24pO1xuICB9KTtcblxuICAvLyBob21lVGVhbSBhbmQgYXdheVRlYW0gY2FuIGJlIHN3aXRjaGVkIGluXG4gIC8vIFNob3cgc3F1YWRcbiAgLy8gJCgnLnBsYXllci1zZWxlY3Rpb24tYm94IGJ1dHRvbicpLm9uKCdjbGljaycsICgpID0+IHtcbiAgLy8gICAkKCcudGVhbS1wYW5lbCcpLmh0bWwoJycpO1xuICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3B1cnMucGxheWVycy5sZW5ndGg7IGkrKykge1xuICAvLyAgICAgY29uc3QgcGxheWVyID0gc3B1cnMucGxheWVyc1tpXTtcbiAgLy8gICAgIGNvbnN0IHN0YXJ0aW5nRWxldmVuID0gcGxheWVyLnBsYXlpbmcgPyAnWUVTJyA6ICdOTyc7XG4gIC8vXG4gIC8vICAgICAkKCcudGVhbS1wYW5lbCcpLmFwcGVuZChgPHAgY2xhc3M9XCJwbGF5ZXItbGluZVwiIGlkPScke3BsYXllci5uYW1lfSc+PHNwYW4gY2xhc3M9XCJzdGFydGluZ1wiIGlkPVwiJHtpfVwiPiR7c3RhcnRpbmdFbGV2ZW59PC9zcGFuPjxzcGFuIGNsYXNzPVwicGxheWVyLW5hbWVcIj4ke3BsYXllci5wb3NpdGlvbn0gJHtwbGF5ZXIubmFtZX08L3NwYW4+PHNwYW4gY2xhc3M9XCJwbGF5ZXItc3RhdFwiPiR7cGxheWVyLmF0dGFja308L3NwYW4+PHNwYW4gY2xhc3M9XCJwbGF5ZXItc3RhdFwiPiR7cGxheWVyLmRlZmVuY2V9PC9zcGFuPjwvcD5gKTtcbiAgLy8gICB9XG4gIC8vIH0pO1xuXG4gICQoJy5wbGF5ZXItc2VsZWN0aW9uLWJveCBidXR0b24nKS5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgJCgnLnRlYW0tcGFuZWwnKS5odG1sKCcnKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNwdXJzLnBsYXllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHBsYXllciA9IHNwdXJzLnBsYXllcnNbaV07XG5cbiAgICAgIGNvbnN0IHN0YXJ0aW5nRWxldmVuID0gcGxheWVyLnBsYXlpbmcgPyAnJiMxMDAwNDsnIDogJyYjMTAwMDc7JztcbiAgICAgICQoJy50ZWFtLXBhbmVsJykuYXBwZW5kKGA8cCBjbGFzcz1cInBsYXllci1saW5lXCIgaWQ9JyR7cGxheWVyLm5hbWV9Jz48c3BhbiBjbGFzcz1cInN0YXJ0aW5nXCIgaWQ9XCIke2l9XCI+JHtzdGFydGluZ0VsZXZlbn08L3NwYW4+PHNwYW4gY2xhc3M9XCJwbGF5ZXItbmFtZVwiPiR7cGxheWVyLnBvc2l0aW9ufSAke3BsYXllci5uYW1lfTwvc3Bhbj48c3BhbiBjbGFzcz1cInBsYXllci1zdGF0XCI+JHtwbGF5ZXIuYXR0YWNrfTwvc3Bhbj48c3BhbiBjbGFzcz1cInBsYXllci1zdGF0XCI+JHtwbGF5ZXIuZGVmZW5jZX08L3NwYW4+PC9wPmApO1xuICAgIH1cbiAgfSk7XG5cblxuXG5cbiAgLy8gVG9nZ2xlIHllcy9ubyBwbGF5aW5nXG4gICQoJy50ZWFtLXBhbmVsJykub24oJ2NsaWNrJywgKGUpID0+IHtcbiAgICBjb25zdCBzZWxlY3RlZFBsYXllciA9IGUudGFyZ2V0LmlkO1xuICAgIHNwdXJzLnBsYXllcnNbc2VsZWN0ZWRQbGF5ZXJdLnBsYXlpbmcgPSAhc3B1cnMucGxheWVyc1tzZWxlY3RlZFBsYXllcl0ucGxheWluZztcbiAgICBjb25zdCBwbGF5aW5nU3RhdHVzICA9ICQoYCMke3NlbGVjdGVkUGxheWVyfWApLmh0bWwoKTtcbiAgICBzcHVycy5wbGF5ZXJzW3NlbGVjdGVkUGxheWVyXS5wbGF5aW5nICA/ICQoYCMke3NlbGVjdGVkUGxheWVyfWApLmh0bWwoJyYjMTAwMDc7JykgOiAkKGAjJHtzZWxlY3RlZFBsYXllcn1gKS5odG1sKCcmIzEwMDA0OycpO1xuXG4gIH0pO1xuXG4gIC8vIFRyeWluZyB0byBzd2l0Y2ggcm93c1xuICAvLyAkKCcudGVhbS1wYW5lbCcpLm9uKCdjbGljaycsIChlKSA9PiB7XG4gIC8vICAgLy8gY29uc29sZS5sb2coJ2NsaWNrZWQnKTtcbiAgLy8gICAvLyBjb25zb2xlLmxvZyhlLnRhcmdldCk7XG4gIC8vICAgLy8gY29uc29sZS5sb2coZS50YXJnZXQuaWQpO1xuICAvLyAgIGpRdWVyeSgnI2thbmUnKS5uZXh0KCkuYWZ0ZXIoalF1ZXJ5KCcjZGVtYmVsZScpKTtcbiAgLy8gICBqUXVlcnkoJyNkZW1iZWxlJykucHJldigpLmJlZm9yZShqUXVlcnkoJyNrYW5lJykpO1xuICAvLyB9KTtcblxuICAkcHJpbWFyeUJ1dHRvbi5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgcnVuID0gIXJ1bjtcbiAgICBydW4gPyAkcHJpbWFyeUJ1dHRvbi50ZXh0KCdQYXVzZScpIDogJHByaW1hcnlCdXR0b24udGV4dCgnUGxheScpO1xuICB9KTtcblxuICAvLyBGdW5jdGlvbnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIGZ1bmN0aW9uIHRpbWVDb250cm9sKCkge1xuXG4gICAgaWYobWF0Y2hUaW1lID09PSA0NCkge1xuICAgICAgJGNvbW1lbnRhcnlCb3gudGV4dChgVGhhdCdzIGhhbGYtdGltZSFgKTtcbiAgICAgIHJ1biA9ICFydW47XG4gICAgICAkcHJpbWFyeUJ1dHRvbi50ZXh0KCdQbGF5Jyk7XG4gICAgfVxuXG4gICAgaWYobWF0Y2hUaW1lID09PSA5MCkge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcklEKTtcbiAgICAgICRwcmltYXJ5QnV0dG9uLnRleHQoJ0ZpbmlzaCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBtYXRjaFRpbWUrKztcbiAgICAgICRtYXRjaFRpbWUudGV4dChtYXRjaFRpbWUpO1xuICAgIH1cblxuICB9XG5cbiAgZnVuY3Rpb24gZ2VuUmFuZG9tVmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHZhbHVlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBtb3ZlKCkge1xuICAgIGNvbnN0IGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaG9tZUJhcicpO1xuICAgIHdpZHRoID0gaG9tZVRlYW0uYXZlcmFnZVBsYXllclZhbHVlcygnYXR0YWNrJykgKyBnZW5SYW5kb21WYWx1ZSgxMCk7XG4gICAgZWxlbS5zdHlsZS53aWR0aCA9IHdpZHRoICsgJyUnO1xuICB9XG5cbiAgZnVuY3Rpb24gc2VsZWN0VGVhbSgpIHtcbiAgICBjb25zdCBob21lUmFuZG9tID0gIGdlblJhbmRvbVZhbHVlKGhvbWVUZWFtLmF2ZXJhZ2VQbGF5ZXJWYWx1ZXMoJ2F0dGFjaycpKTtcbiAgICBjb25zdCBhd2F5UmFuZG9tID0gIGdlblJhbmRvbVZhbHVlKGF3YXlUZWFtLmF2ZXJhZ2VQbGF5ZXJWYWx1ZXMoJ2F0dGFjaycpKTtcblxuICAgIGlmIChob21lUmFuZG9tID49IGF3YXlSYW5kb20pIHtcbiAgICAgICRjb21tZW50YXJ5Qm94LmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGhvbWVUZWFtLmNvbG9yc1swXSk7XG4gICAgICAkY29tbWVudGFyeUJveC5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgIHJldHVybiBbaG9tZVRlYW0sICdob21lJ107XG4gICAgfSBlbHNlIHtcbiAgICAgICRjb21tZW50YXJ5Qm94LmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGF3YXlUZWFtLmNvbG9yc1swXSk7XG4gICAgICAkY29tbWVudGFyeUJveC5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgIHJldHVybiBbYXdheVRlYW0sICdhd2F5J107XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2VsZWN0UGxheWVyKHRlYW0pIHtcbiAgICBjb25zdCBnZW5SYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRlYW0ucGxheWVycy5sZW5ndGgpO1xuICAgIHJldHVybiB0ZWFtLnBsYXllcnNbZ2VuUmFuZG9tSW5kZXhdO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29hbENoYW5jZSh0ZWFtLCBwbGF5ZXIpIHtcbiAgICBpZiAocGxheWVyLnBsYXlpbmcpIHtcbiAgICAgIC8vIFJlZmFjdG9yIHRoaXNcbiAgICAgIGxldCBzY29yZSA9IG51bGw7XG4gICAgICBsZXQgZ2V0U2NvcmUgPSBudWxsO1xuICAgICAgaWYgKHRlYW0gPT09ICdob21lJykge1xuICAgICAgICBnZXRTY29yZSA9ICRob21lU2NvcmUudGV4dCgpO1xuICAgICAgICBzY29yZSA9IHBhcnNlRmxvYXQoZ2V0U2NvcmUpICsgMTtcbiAgICAgICAgJGhvbWVTY29yZS50ZXh0KHNjb3JlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGdldFNjb3JlID0gJGF3YXlTY29yZS50ZXh0KCk7XG4gICAgICAgIHNjb3JlID0gcGFyc2VGbG9hdChnZXRTY29yZSkgKyAxO1xuICAgICAgICAkYXdheVNjb3JlLnRleHQoc2NvcmUpO1xuICAgICAgfVxuICAgICAgJGNvbW1lbnRhcnlCb3gudGV4dChgR29hbCEhIWApO1xuXG4gICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLWZ1dGJvbC1vJyBzdHlsZT0nZm9udC1zaXplOiAyMnB4OyBjb2xvcjp3aGl0ZTsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gc2NvcmVkPGJyLz5gKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVEaXNjaXBsaW5lKHBsYXllciwgdGVhbSkge1xuICAgIGlmIChwbGF5ZXIuc3RhdHVzKSB7XG4gICAgICAvLyBBbHJlYWR5IGJvb2tlZD8gU2VuZCBoaW0gb2ZmIVxuICAgICAgY29uc29sZS5sb2cocGxheWVyLnN0YXR1cyk7XG4gICAgICBpZiAocGxheWVyLnN0YXR1cyA9PT0gJ1llbGxvdycpIHtcbiAgICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJyNGRjAwMDAnKTtcbiAgICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdjb2xvcicsICcjRkZGRkZGJyk7XG4gICAgICAgIC8vIFN0b3JlIG1lc2FnZXMgYW5kIGRldGFpbHMgaW4gYW4gZ2FtZSBPYmplY3RcbiAgICAgICAgJGNvbW1lbnRhcnlCb3gudGV4dChgJHtwbGF5ZXIubmFtZX0gZ2V0cyBhIHJlZCFgKTtcbiAgICAgICAgJChgIyR7dGVhbX1FdmVudHNgKS5hcHBlbmQoYDxpIGNsYXNzPSdmYSBmYS1zcXVhcmUgZXZlbnQtaXRlbScgc3R5bGU9J2ZvbnQtc2l6ZTogMjRweDsgY29sb3I6IHJlZDsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gc2VudCBvZmY8YnIvPmApO1xuXG4gICAgICAgIHBsYXllci5zdGF0dXMgPSAnRWplY3RlZCc7XG4gICAgICAgIHBsYXllci5wbGF5aW5nID0gZmFsc2U7XG5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRjb21tZW50YXJ5Qm94LmNzcygnYmFja2dyb3VuZC1jb2xvcicsICd5ZWxsb3cnKTtcbiAgICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdjb2xvcicsICcjMDAwMDAwJyk7XG4gICAgICAgICRjb21tZW50YXJ5Qm94LnRleHQoYCR7cGxheWVyLm5hbWV9IGdldHMgYSB5ZWxsb3chYCk7XG5cbiAgICAgICAgLy8gU3RvcmUgbWVzYWdlcyBhbmQgZGV0YWlscyBpbiBhbiBnYW1lIE9iamVjdFxuICAgICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLXNxdWFyZSBldmVudC1pdGVtJyBzdHlsZT0nZm9udC1zaXplOiAyNHB4OyBjb2xvcjogeWVsbG93OyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke3BsYXllci5uYW1lfSBib29rZWQ8YnIvPmApO1xuXG4gICAgICAgIHBsYXllci5zdGF0dXMgPSAnWWVsbG93JztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVJbmp1cnkocGxheWVyLCB0ZWFtKSB7XG5cbiAgICBpZiAocGxheWVyLnBsYXlpbmcpIHtcbiAgICAgIC8vIFRIRVJFIENPVUxEIEJFIEFOIElOSlVSWVxuICAgICAgaWYgKGdlblJhbmRvbVZhbHVlKDEwMSkgJSA4ID09PSAwKSB7XG4gICAgICAgICRjb21tZW50YXJ5Qm94LnRleHQoYCR7cGxheWVyLm5hbWV9IGdldHMgdGFrZW4gb2ZmIG9uIGEgc3RyZXRjaGVyIWApO1xuICAgICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLXBsdXMnIHN0eWxlPSdmb250LXNpemU6IDI2cHg7IGNvbG9yOiBncmVlbjsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gaW5qdXJlZDxici8+YCk7XG4gICAgICAgIHBsYXllci5wbGF5aW5nID0gZmFsc2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkY29tbWVudGFyeUJveC50ZXh0KGAke3BsYXllci5uYW1lfSdzIGxpbXBpbmcsIGJ1dCBoZSdsbCBiZSBva2F5YCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRnJlZWtpY2socGxheWVyLCB0ZWFtKSB7XG5cbiAgICBpZiAocGxheWVyLnBsYXlpbmcpIHtcbiAgICAgIC8vIFRIRVJFIENPVUxEIEJFIEFOIElOSlVSWVxuICAgICAgaWYgKGdlblJhbmRvbVZhbHVlKDEwMSkgJSA1ID09PSAwKSB7XG5cbiAgICAgICAgLy8gUmVmYWN0b3IgdGhpc1xuICAgICAgICBsZXQgc2NvcmUgPSBudWxsO1xuICAgICAgICBsZXQgZ2V0U2NvcmUgPSBudWxsO1xuICAgICAgICBpZiAodGVhbSA9PT0gJ2hvbWUnKSB7XG4gICAgICAgICAgZ2V0U2NvcmUgPSAkaG9tZVNjb3JlLnRleHQoKTtcbiAgICAgICAgICBzY29yZSA9IHBhcnNlRmxvYXQoZ2V0U2NvcmUpICsgMTtcbiAgICAgICAgICAkaG9tZVNjb3JlLnRleHQoc2NvcmUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGdldFNjb3JlID0gJGF3YXlTY29yZS50ZXh0KCk7XG4gICAgICAgICAgc2NvcmUgPSBwYXJzZUZsb2F0KGdldFNjb3JlKSArIDE7XG4gICAgICAgICAgJGF3YXlTY29yZS50ZXh0KHNjb3JlKTtcbiAgICAgICAgfVxuXG4gICAgICAgICRjb21tZW50YXJ5Qm94LnRleHQoYEl0J3MgYSB3b25kZXIgZ29hbCEgR29hbCEhIWApO1xuICAgICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLWZ1dGJvbC1vJyBzdHlsZT0nZm9udC1zaXplOiAyMnB4OyBjb2xvcjp3aGl0ZTsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gc2NvcmVkPGJyLz5gKTtcblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJGNvbW1lbnRhcnlCb3gudGV4dChgT2ghICR7cGxheWVyLm5hbWV9IGhhcyBwdXQgaXQgaW4gUm93IFohYCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUGVuYWx0eShwbGF5ZXIsIHRlYW0pIHtcbiAgICBpZiAocGxheWVyLnN0YXR1cykge1xuICAgICAgaWYgKGdlblJhbmRvbVZhbHVlKDEwMSkgJSA1ID09PSAwKSB7XG4gICAgICAgIC8vIFJlZmFjdG9yIHRoaXNcbiAgICAgICAgbGV0IHNjb3JlID0gbnVsbDtcbiAgICAgICAgbGV0IGdldFNjb3JlID0gbnVsbDtcbiAgICAgICAgaWYgKHRlYW0gPT09ICdob21lJykge1xuICAgICAgICAgIGdldFNjb3JlID0gJGhvbWVTY29yZS50ZXh0KCk7XG4gICAgICAgICAgc2NvcmUgPSBwYXJzZUZsb2F0KGdldFNjb3JlKSArIDE7XG4gICAgICAgICAgJGhvbWVTY29yZS50ZXh0KHNjb3JlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBnZXRTY29yZSA9ICRhd2F5U2NvcmUudGV4dCgpO1xuICAgICAgICAgIHNjb3JlID0gcGFyc2VGbG9hdChnZXRTY29yZSkgKyAxO1xuICAgICAgICAgICRhd2F5U2NvcmUudGV4dChzY29yZSk7XG4gICAgICAgIH1cblxuICAgICAgICAkY29tbWVudGFyeUJveC50ZXh0KGAke3BsYXllci5uYW1lfSdzIGNsaW5pY2FsIGZyb20gdGhlIHNwb3QhIEdvYWwhISFgKTtcblxuICAgICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLWZ1dGJvbC1vJyBzdHlsZT0nZm9udC1zaXplOiAyMnB4OyBjb2xvcjp3aGl0ZTsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gc2NvcmVzIHBlbmFsdHk8YnIvPmApO1xuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkY29tbWVudGFyeUJveC50ZXh0KGBIZSdzIG1pc3NlZCBpdCEgVGhlIHByZXNzdXJlIGhhcyBnb3QgdG8gaGltYCk7XG4gICAgICAgICQoYCMke3RlYW19RXZlbnRzYCkuYXBwZW5kKGA8aSBjbGFzcz0nZmEgZmEtZnV0Ym9sLW8nIHN0eWxlPSdmb250LXNpemU6IDIycHg7IGNvbG9yOnJlZDsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gc2NvcmVzIHBlbmFsdHk8YnIvPmApO1xuXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc3RyYWlnaHRSZWQocGxheWVyLCB0ZWFtKSB7XG4gICAgaWYgKHBsYXllci5wbGF5aW5nKSB7XG4gICAgICBwbGF5ZXIucGxheWluZyA9IGZhbHNlO1xuICAgICAgJGNvbW1lbnRhcnlCb3gudGV4dCgnVGhlIHJlZmVyZWUgZ2l2ZXMgaGltIGEgc3RyYWlnaHQgcmVkIScpO1xuICAgICAgJChgIyR7dGVhbX1FdmVudHNgKS5hcHBlbmQoYDxpIGNsYXNzPSdmYSBmYS1zcXVhcmUnIHN0eWxlPSdmb250LXNpemU6IDI0cHg7IGNvbG9yOiByZWQ7IHBhZGRpbmctdG9wOjVweCcgYXJpYS1oaWRkZW49J3RydWUnPjwvaT4gJHttYXRjaFRpbWV9IG1pbnM6ICR7cGxheWVyLm5hbWV9IHNlbnQgb2ZmPGJyLz5gKTtcbiAgICB9XG4gIH1cblxuXG5cblxuICBmdW5jdGlvbiBnZW5lcmF0ZUV2ZW50TWVzc2FnZSgpIHtcbiAgICAvLyBTdG9yZSBtZXNhZ2VzIGFuZCBkZXRhaWxzIGluIGFuIGdhbWUgT2JqZWN0XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpZ1RlYW0odGVhbSwgc2VsZWN0b3IpIHtcbiAgICBpZiAoaG9tZVRlYW0gPT09IG51bGwpIHtcbiAgICAgICQoJy5ob21lLXRlYW0gIC50ZWFtLW5hbWUnKS50ZXh0KHNlbGVjdG9yKTtcbiAgICAgIHN3aXRjaCAoc2VsZWN0b3IpIHtcbiAgICAgICAgY2FzZSAnVG90dGVuaGFtJzpcbiAgICAgICAgICBob21lVGVhbSA9IHNwdXJzO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0sICNob21lQmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgaG9tZVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtJykuY3NzKCdjb2xvcicsIGhvbWVUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ01hbiBVbml0ZWQnOlxuICAgICAgICAgIGhvbWVUZWFtID0gbWFuVW5pdGVkO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0sICNob21lQmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgaG9tZVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtJykuY3NzKCdjb2xvcicsIGhvbWVUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0xpdmVycG9vbCc6XG4gICAgICAgICAgaG9tZVRlYW0gPSBsaXZlcnBvb2w7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTWFuIENpdHknOlxuICAgICAgICAgIGhvbWVUZWFtID0gbWFuQ2l0eTtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtLCAjaG9tZUJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGhvbWVUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbScpLmNzcygnY29sb3InLCBob21lVGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdFdmVydG9uJzpcbiAgICAgICAgICBob21lVGVhbSA9IGV2ZXJ0b247XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnQ2hlbHNlYSc6XG4gICAgICAgICAgaG9tZVRlYW0gPSBjaGVsc2VhO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0sICNob21lQmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgaG9tZVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtJykuY3NzKCdjb2xvcicsIGhvbWVUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0xlaWNlc3Rlcic6XG4gICAgICAgICAgaG9tZVRlYW0gPSBsZWljZXN0ZXI7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnQXJzZW5hbCc6XG4gICAgICAgICAgaG9tZVRlYW0gPSBhcnNlbmFsO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0sICNob21lQmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgaG9tZVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtJykuY3NzKCdjb2xvcicsIGhvbWVUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhob21lVGVhbSk7XG4gICAgfSBlbHNlIHtcblxuICAgICAgJCgnLmF3YXktdGVhbSAudGVhbS1uYW1lJykudGV4dChzZWxlY3Rvcik7XG5cbiAgICAgIHN3aXRjaCAoc2VsZWN0b3IpIHtcbiAgICAgICAgY2FzZSAnVG90dGVuaGFtJzpcbiAgICAgICAgICBhd2F5VGVhbSA9IHNwdXJzO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0sIC5wb3NzZXNzaW9uLWJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGF3YXlUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbScpLmNzcygnY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdNYW4gVW5pdGVkJzpcbiAgICAgICAgICBhd2F5VGVhbSA9IG1hblVuaXRlZDtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtLCAucG9zc2Vzc2lvbi1iYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0nKS5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTGl2ZXJwb29sJzpcbiAgICAgICAgICBhd2F5VGVhbSA9IGxpdmVycG9vbDtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtLCAucG9zc2Vzc2lvbi1iYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0nKS5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTWFuIENpdHknOlxuICAgICAgICAgIGF3YXlUZWFtID0gbWFuQ2l0eTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtLCAucG9zc2Vzc2lvbi1iYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0nKS5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnRXZlcnRvbic6XG4gICAgICAgICAgYXdheVRlYW0gPSBldmVydG9uO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0sIC5wb3NzZXNzaW9uLWJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGF3YXlUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbScpLmNzcygnY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdDaGVsc2VhJzpcbiAgICAgICAgICBhd2F5VGVhbSA9IGNoZWxzZWE7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbSwgLnBvc3Nlc3Npb24tYmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYXdheVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtJykuY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0xlaWNlc3Rlcic6XG4gICAgICAgICAgYXdheVRlYW0gPSBsZWljZXN0ZXI7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbSwgLnBvc3Nlc3Npb24tYmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYXdheVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtJykuY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0Fyc2VuYWwnOlxuICAgICAgICAgIGF3YXlUZWFtID0gYXJzZW5hbDtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtLCAucG9zc2Vzc2lvbi1iYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0nKS5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNvbnNvbGUubG9nKGF3YXlUZWFtKTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyhzZWxlY3Rvcik7XG4gICAgLy8gUGFzcyBpbiB0aGUgb2JqZWN0IHZhbHVlcyB0byBob21lVGVhbVxuICB9XG5cblxufSk7XG4iXX0=
