"use strict";var _slicedToArray=function(){function e(e,a){var o=[],s=!0,t=!1,n=void 0;try{for(var r,l=e[Symbol.iterator]();!(s=(r=l.next()).done)&&(o.push(r.value),!a||o.length!==a);s=!0);}catch(e){t=!0,n=e}finally{try{!s&&l.return&&l.return()}finally{if(t)throw n}}return o}return function(a,o){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return e(a,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function e(e){$(".team-panel").html(""),$(".formation").val(e.formation);var a=["goalkeeper","defender","midfielder","striker"];e.players.sort(function(e,o){return a.indexOf(e.position)<a.indexOf(o.position)?-1:1});for(var o=0;o<e.players.length;o++){var s=e.players[o],t=s.playing?"&#10004;":"&#10007;";$(".team-panel").append('<p class="player-line '+s.position+"\" id='"+s.name+'\'>\n        <span class="starting" id="'+o+'">'+t+'</span>\n        <span class="player-position ">'+s.position+'</span>\n        <span class="player-name">'+s.name+'</span>\n        <span class="player-stat">'+s.attack+'</span>\n        <span class="player-stat">'+s.defence+'</span>\n        <span class="player-stat">'+s.creativity+'</span>\n        <span class="player-stat">'+s.defence+"</span>\n        </p>")}}function a(e){$(".team-display").html("");var a=["1"].concat(e.formation.split("-")),o=["goalkeeper","defender","midfielder","striker"],s=0,t=0;try{a.map(function(a){for(var n=parseFloat(a),r=0;r<n;){if(e.players[s].playing){var l=o[t]!==e.players[s].position?"orange":"";$(".team-display").append("<span class='player-block "+l+" "+e.players[s].status+"'>"+e.players[s].name+"</span>"),e.players[s].chosenPosition=o[t],r++}console.log(s),s++}$(".team-display").append('<div class="seperate-players">'),t++})}catch(e){$(".team-display").append("<p class='team-selection-warning seperate-players'>Less than 11 players selected!</p>")}}function o(e,o){e.players[o].playing=!e.players[o].playing,console.log(e.players[o].playing),e.players[o].playing?$("#"+o).html("&#10004;"):$("#"+o).html("&#10007;"),a(v)}function s(){44===w&&(f.text("That's half-time!"),x=!x,g.text("Play")),90===w?(f.text("That's full-time!"),clearInterval(B),g.text("Finish")):(w++,u.text(w))}function t(e){return Math.floor(Math.random()*e)}function n(){var e=document.getElementById("homeBar");P=T.averagePlayerValues("creativity")/F.averagePlayerValues("creativity")*100,console.log(T.averagePlayerValues("creativity")),console.log(F.averagePlayerValues("creativity")),console.log(P),e.style.width=P+"%"}function r(){return t(T.averagePlayerValues("creativity"))>=t(F.averagePlayerValues("creativity"))?(f.css("background-color",T.colors[0]),f.css("color",T.colors[1]),t(20)%4==0&&f.text(y("chance","")),[T,"home",F]):(f.css("background-color",F.colors[0]),f.css("color",F.colors[1]),t(20)%4==0&&f.text(y("chance","")),[F,"away",T])}function l(e,a,o){var s=null,n=null,r=e.randomPlayer(),l=o.randomPlayerByPosition("defender");t(r.attack)>t(l.defence)&&("home"===a?(n=b.text(),s=parseFloat(n)+1,b.text(s)):(n=k.text(),s=parseFloat(n)+1,k.text(s)),y("goal",r),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+r.name+" scored<br/>"))}function c(e,a,o){console.log("YELLOW");var s=o.randomPlayer(),n="home"===a?"away":"home";t(s.discipline)+(100-w)<90&&("Yellow"===s.status?(f.css("background-color","#FF0000"),f.css("color","#FFFFFF"),y("secondYellow",s),$("#"+n+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+s.name+" sent off<br/>"),s.status="ejected",s.playing=!1):(f.css("background-color","yellow"),f.css("color","#000000"),y("yellow",s),$("#"+n+"Events").append("\n          <i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+s.name+" booked<br/>"),s.status="yellow"))}function i(e,a){var o=e.randomPlayer();t(101)%8==0?(y("injury",o),$("#"+a+"Events").append("<i class='fa fa-plus' style='font-size: 26px; color: green; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+o.name+" injured<br/>"),o.playing=!1):f.text(o.name+"'s limping, but he'll be okay")}function m(e,a,o){var s=e.randomPlayerByPosition("midfielder"),t=o.randomPlayerByPosition("goalkeeper").defence+o.averagePlayerValues("defender");if(s.attack>t){var n=null,r=null;"home"===a?(r=b.text(),n=parseFloat(r)+1,b.text(n)):(r=k.text(),n=parseFloat(r)+1,k.text(n)),y("freekick",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+s.name+" scored<br/>")}else y("wastedFreekick",s)}function p(e,a,o){var s=e.randomPlayerByPosition("striker"),n=o.randomPlayerByPosition("goalkeeper"),r=o.randomPlayerByPosition("defender"),l="home"===a?"away":"home";if(t(100)>25&&(r.status="yellow",$("#"+l+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+r.name+" booked<br/>")),2*t(s.attack)>t(n.defence)){var c=null,i=null;"home"===a?(i=b.text(),c=parseFloat(i)+1,b.text(c)):(i=k.text(),c=parseFloat(i)+1,k.text(c)),y("penalty",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+s.name+" scores penalty<br/>")}else y("missedPenalty",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+s.name+" missed penalty<br/>")}function d(e,a){var o=e.randomPlayer();if(t(o.discipline)<25){o.playing=!1;var s="home"===a?"away":"home";y("straightRed",o),$("#"+s+"Events").append("<i class='fa fa-square' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+w+" mins: "+o.name+" sent off<br/>")}}function h(e,a){if(null===T){switch($(".home-team  .team-name").text(a),a){case"Tottenham":T=spurs,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Man United":T=manUnited,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Liverpool":T=liverpool,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Man City":T=manCity,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Everton":T=everton,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Chelsea":T=chelsea,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Leicester":T=leicester,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1]);break;case"Arsenal":T=arsenal,$(".home-team, #homeBar").css("background-color",T.colors[0]),$(".home-team").css("color",T.colors[1])}console.log(T)}else{switch($(".away-team .team-name").text(a),a){case"Tottenham":F=spurs,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Man United":F=manUnited,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Liverpool":F=liverpool,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Man City":F=manCity,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Everton":F=everton,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Chelsea":F=chelsea,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Leicester":F=leicester,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1]);break;case"Arsenal":F=arsenal,$(".away-team, .possession-bar").css("background-color",F.colors[0]),$(".away-team").css("color",F.colors[1])}console.log(F)}console.log(a)}function y(e,a){var o={goal:["Goal!","He's scored!","That's a great finish!","What a goal by "+a.name,a.name+" finishes off the move!"],freekick:["It's a freekick",a.name+" to take the freekick","He lines up the freekick","This is a chance to get a cross in"],wastedFreekick:[a.name+" loses possession","That's ended up in row Z","The attack amounts to nothing",a.name+" has wasted that opportunity",a.name+"'s effort goes over the bar","He hands back possession to the other team"],yellow:["He's going in the book","Ouch! "+a.name+"'ll a yellow for that","That's a booking","It's a yellow!","The ref is taking his name"],secondYellow:["He's already been booked...","That's a second yellow",a.name+" is shown a red!",a.name+" is off"],straightRed:[a.name+" is shown a straight red!",a.name+" is off","The ref has given him straight red!"],penalty:["The referee points to the spot","That's a penalty",a.name+" is fouled in the area","The ref blows his whistle. Penalty."],missedPenalty:["Saved!","It's over the bar",a.name+" has missed it!","Oh dear! "+a.name+"'s put it wide'"],injury:[a.name+"'s is going off",a.name+" is injured",a.name+" can't continue"],chance:["The ball is wasted","Possession is sloppily given away","That is wasted","The referee pulls back play","The ball goes out for a throw","Good interception!","He's robbed him of possesion"]},s=t(o[e].length),n=o[e][s];f.text(""+n)}var u=$(".changing-minutes"),f=$("#commentaryBox"),g=$(".primary-button"),b=$(".home-team .score"),k=$(".away-team .score"),v=null,w=0,x=!1,P=50,T=null,F=null,B=setInterval(function(){if(x){var e=t(100)+1;console.log(w+": "+e);var a=r(),o=_slicedToArray(a,3),h=o[0],y=o[1],u=o[2];e%18==0&&l(h,y,u),e%80==0&&p(h,y,u),e%90==0&&d(u,y),e%22==0&&m(h,y,u),e%14==0&&c(h,y,u),e%60==0&&i(h,y),n(),s()}},200);$(".team-input").on("click",function(e){var a=e.target.innerHTML;null===T?(h(T,a),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(h(F,a),console.log("awayTeam now selected!"),$(".title-message").text("Opponent selected. Now edit tactics or proceed to match."))}),$("#revealTeam").on("click",function(){a(v)}),$(".team-panel").on("click",function(e){var a=e.target.id;o(v,a)}),g.on("click",function(){x=!x,$("#match-setup, .info-message, .team-setup").hide(),$("#match-engine, .away-team, .home-team, .timer").show(),x?g.text("Pause"):g.text("Play")}),$("#homeTeam").on("click",function(){x&&(x=!x),g.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(T),v=T,a(v)}),$("#awayTeam").on("click",function(){x&&(x=!x),g.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(F),v=F,a(v)}),$(".go-back").on("click",function(){$(".team-setup").hide(),$(".match-setup").show()}),$(".formation").on("change",function(e){var o=e.target.value;v.formation=o,a(v)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
