"use strict";var _slicedToArray=function(){function e(e,a){var s=[],o=!0,t=!1,r=void 0;try{for(var n,i=e[Symbol.iterator]();!(o=(n=i.next()).done)&&(s.push(n.value),!a||s.length!==a);o=!0);}catch(e){t=!0,r=e}finally{try{!o&&i.return&&i.return()}finally{if(t)throw r}}return s}return function(a,s){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return e(a,s);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function e(e){$(".team-panel").html(""),$(".formation").val(e.formation),e.players.sort(function(e,a){return E.indexOf(e.position)<E.indexOf(a.position)?-1:1});for(var a=0;a<e.players.length;a++){var s=e.players[a],o=s.playing?"&#10004;":"&#10007;";$(".team-panel").append('<p class="player-line '+s.position+" "+s.status+"\" id='"+s.name+"'>\n          <span class=\"starting "+s.status+'" id="'+a+'">'+o+'</span>\n          <span class="player-position ">'+s.position+'</span>\n          <span class="player-name">'+s.name+'</span>\n          <span class="player-stat">'+s.attack+'</span>\n          <span class="player-stat">'+s.defence+'</span>\n          <span class="player-stat">'+s.creativity+'</span>\n          <span class="player-stat">'+s.defence+'</span>\n          <span class="player-stat">'+s.fitness+"</span>\n        </p>")}}function a(e){$(".team-display").html("");var a=["1"].concat(e.formation.split("-")),s=0,o=0;try{a.map(function(a){for(var t=parseFloat(a),r=0;r<t;){if(e.players[s].playing||"ejected"===e.players[s].status){var n=E[o]!==e.players[s].position?"warning":"";$(".team-display").append("<span class='player-block "+n+" "+e.players[s].status+"'>"+e.players[s].name+"</span>"),e.players[s].chosenPosition=E[o],r++}console.log(s),s++}$(".team-display").append('<div class="seperate-players">'),o++})}catch(e){$(".team-display").append("<p class='team-selection-warning seperate-players'>Less than 11 players selected!</p>")}}function s(e,s){if(e.players[s].playing=!e.players[s].playing,a(w),e.players[s].playing){if($("#"+s).html("&#10004;"),F){console.log("clicked"),$("#"+s).parent().css({background:"green"});var t=e.players[s];o(e,t)}}else if($("#"+s).html("&#10007;"),F){$("#"+s).parent().css({"pointer-events":"none",background:"red"});var r=e.players[s];o(e,r)}}function o(e,a){e.subs<7?a.playing?($("#"+e.place+"Events").append("<i class='fa fa-arrow-right' style='font-size: 22px; color:green; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+a.name+" substituted<br/>"),e.subs+=1,a.playing=!0):($("#"+e.place+"Events").append("<i class='fa fa-arrow-right' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+a.name+" substituted<br/>"),e.subs+=1,a.playing=!1,a.status="subbed-off"):console.log("You have had 3 subs!")}function t(){44===x&&(g.text("That's half-time!"),P=!P,k.text("Play")),90===x?(g.text("That's full-time!"),clearInterval(z),k.text("Finish")):(x++,h.text(x))}function r(e){return Math.floor(Math.random()*e)}function n(){var e=document.getElementById("homeBar");T=V.averagePlayerValues("creativity")/(V.averagePlayerValues("creativity")+B.averagePlayerValues("creativity"))*100+(Math.random()<.5?-r(6):r(6)),console.log(V.averagePlayerValues("creativity")),console.log(B.averagePlayerValues("creativity")),e.style.width=T+"%"}function i(){return r(V.averagePlayerValues("creativity")+V.averagePlayerValues("fitness"))>=r(B.averagePlayerValues("creativity")+B.averagePlayerValues("fitness"))?(g.css("background-color",V.colors[0]),g.css("color",V.colors[1]),r(20)%4==0&&(g.text(f("chance","")),V.increaseValues(3,"attack",["midfielder","striker"]),V.increaseValues(3,"creativity",["midfielder","striker"])),[V,"home",B]):(g.css("background-color",B.colors[0]),g.css("color",B.colors[1]),r(20)%4==0&&(B.increaseValues(3,"attack",["midfielder","striker"]),B.increaseValues(3,"creativity",["midfielder","striker"]),g.text(f("chance",""))),[B,"away",V])}function l(e,a,s){var o=null,t=null,n=e.randomPlayer(),i=s.randomPlayerByPosition("defender");r(n.attack)>r(i.defence)&&("home"===a?(t=b.text(),o=parseFloat(t)+1,b.text(o)):(t=v.text(),o=parseFloat(t)+1,v.text(o)),f("goal",n),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+n.name+" scored<br/>"))}function c(e,a,s){console.log("YELLOW");var o=s.randomPlayer(),t="home"===a?"away":"home";r(o.discipline)+(100-x)<90&&"ejected"!==o.status&&("yellow"===o.status?(g.css("background-color","#FF0000"),g.css("color","#FFFFFF"),f("secondYellow",o),$("#"+t+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" sent off<br/>"),o.status="ejected"):(g.css("background-color","yellow"),g.css("color","#000000"),f("yellow",o),o.defence-=8,$("#"+t+"Events").append("\n          <i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" booked<br/>"),o.status="yellow"))}function d(e,a){var s=e.randomPlayer();if(r(101)%8==0)if(f("injury",s),$("#"+a+"Events").append("<i class='fa fa-plus' style='font-size: 26px; color: green; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" injured<br/>"),"away"===e.place){s.playing=!s.playing,o(B,s);var t=B.randomSubstitute(s.position);t.playing=!t.playing,o(B,t)}else"home"===e.place&&(s.fitness=0+r(30),s.status="injured",s.playing=!1);else s.fitness-=6,s.defence-=6,s.attack-=6,g.text(s.name+"'s limping, but he'll be okay")}function p(e,a,s){var o=e.randomPlayerByPosition("midfielder"),t=s.randomPlayerByPosition("goalkeeper").defence+s.averagePlayerValues("defender");if(o.attack>t){var r=null,n=null;"home"===a?(n=b.text(),r=parseFloat(n)+1,b.text(r)):(n=v.text(),r=parseFloat(n)+1,v.text(r)),f("freekick",o),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" scored<br/>"),o.attack+=5}else f("wastedFreekick",o),o.creativity-=2,e.reduceValues(10,"attack",["striker","midfielder","defender"])}function m(e,a,s){var o=e.randomPlayerByPosition("striker"),t=s.randomPlayerByPosition("goalkeeper"),n=s.randomPlayerByPosition("defender"),i="home"===a?"away":"home";if(r(100)>25&&(n.status="yellow",$("#"+i+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+n.name+" booked<br/>")),2*r(o.attack)>r(t.defence)){var l=null,c=null;"home"===a?(c=b.text(),l=parseFloat(c)+1,b.text(l)):(c=v.text(),l=parseFloat(c)+1,v.text(l)),f("penalty",o),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" scores penalty<br/>"),o.attack+=5}else f("missedPenalty",o),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+o.name+" missed penalty<br/>"),t.defence+=10,o.attack-=10}function u(e,a){var s=e.randomPlayer();if(r(s.discipline)<25){s.playing=!1,s.status="ejected";var o="home"===a?"away":"home";f("straightRed",s),$("#"+o+"Events").append("<i class='fa fa-square' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+x+" mins: "+s.name+" sent off<br/>")}}function y(e,a){if(null===V){switch($(".home-team  .team-name").text(a),a){case"Tottenham":V=spurs,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Man United":V=manUnited,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Liverpool":V=liverpool,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Man City":V=manCity,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Everton":V=everton,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Chelsea":V=chelsea,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Leicester":V=leicester,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1]);break;case"Arsenal":V=arsenal,$(".home-team, #homeBar").css("background-color",V.colors[0]),$(".home-team").css("color",V.colors[1])}V.place="home",console.log(V)}else{switch($(".away-team .team-name").text(a),a){case"Tottenham":B=spurs,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Man United":B=manUnited,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Liverpool":B=liverpool,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Man City":B=manCity,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Everton":B=everton,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Chelsea":B=chelsea,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Leicester":B=leicester,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1]);break;case"Arsenal":B=arsenal,$(".away-team, .possession-bar").css("background-color",B.colors[0]),$(".away-team").css("color",B.colors[1])}B.place="away",console.log(B)}console.log(a)}function f(e,a){var s={goal:["Goal!","He's scored!","That's a great finish!","What a goal by "+a.name,a.name+" finishes off the move!"],freekick:["It's a freekick",a.name+" to take the freekick","He lines up the freekick","This is a chance to get a cross in"],wastedFreekick:[a.name+" loses possession","That's ended up in row Z","The attack amounts to nothing",a.name+" has wasted that opportunity",a.name+"'s effort goes over the bar","He hands back possession to the other team"],yellow:["He's going in the book","Ouch! "+a.name+" will get a yellow for that","That's a booking","It's a yellow!","The ref is taking his name"],secondYellow:["He's already been booked...","That's a second yellow",a.name+" is shown a red!",a.name+" is off"],straightRed:[a.name+" is shown a straight red!",a.name+" is off","The ref has given him straight red!"],penalty:["The referee points to the spot","That's a penalty",a.name+" is fouled in the area","The ref blows his whistle. Penalty."],missedPenalty:["Saved!","It's over the bar",a.name+" has missed it!","Oh dear! "+a.name+"'s put it wide'"],injury:[a.name+"'s is going off",a.name+" is injured",a.name+" can't continue"],chance:["The ball is wasted","Possession is sloppily given away","That is wasted","The referee pulls back play","The ball goes out for a throw","Good interception!","He's robbed him of possesion"]},o=r(s[e].length),t=s[e][o];g.text(""+t)}var h=$(".changing-minutes"),g=$("#commentaryBox"),k=$(".primary-button"),b=$(".home-team .score"),v=$(".away-team .score"),w=null,x=0,P=!1,T=50,V=null,B=null,F=!1,E=["goalkeeper","defender","midfielder","striker"],z=setInterval(function(){if(P){var e=r(100)+1;console.log(x+": "+e);var a=i(),s=_slicedToArray(a,3),y=s[0],f=s[1],h=s[2];if(e%18==0&&(l(y,f,h),y.increaseValues(5,"attack",["midfielder","striker"]),y.increaseValues(5,"creativity",["midfielder","striker"]),h.reduceValues(5,"defence",["midfielder","defender","goalkeeper"])),e%80==0&&(m(y,f,h),h.reduceValues(3,"defence",["midfielder","defender","goalkeeper"])),e%90==0&&(u(h,f),h.reduceValues(10,"defence",["striker","midfielder","defender","goalkeeper"]),h.reduceValues(10,"attack",["striker","midfielder","defender","goalkeeper"]),h.reduceValues(10,"creativity",["striker","midfielder","defender","goalkeeper"])),e%22==0&&(p(y,f,h),y.increaseValues(5,"attack",["midfielder","striker"]),y.increaseValues(5,"creativity",["midfielder","striker"])),e%18==0&&c(y,f,h),e%75==0&&(d(y,f),h.reduceValues(3,"creativity",["striker","midfielder","defender","goalkeeper"])),e%10==0&&B.subs<6&&x>50){var g=r(E.length)+1,k=E[g];if(E[g]){var b=B.randomPlayerByPosition(k);b.playing=!b.playing,o(B,b);var v=B.randomSubstitute(k);v.playing=!v.playing,o(B,v)}}h.reduceValues(1,"fitness",["striker","midfielder","defender","goalkeeper"]),n(),t()}},200);$(".team-input").on("click",function(e){var a=e.target.innerHTML;null===V?(y(V,a),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(y(B,a),console.log("awayTeam now selected!"),$(".title-message").text("Opponent selected. Now edit tactics or proceed to match."))}),$("#revealTeam").on("click",function(){a(w)}),$(".team-panel").on("click",function(e){var a=e.target.id;s(w,a)}),k.on("click",function(){P=!P,$("#match-setup, .info-message, .team-setup").hide(),$("#match-engine, .away-team, .home-team, .timer").show(),P?(k.text("Pause"),F=!0):k.text("Play")}),$("#homeTeam").on("click",function(){P&&(P=!P),k.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(V),w=V,a(w)}),$("#awayTeam").on("click",function(){P&&(P=!P),k.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(B),w=B,a(w)}),$(".go-back").on("click",function(){$(".team-setup").hide(),$(".match-setup").show()}),$(".formation").on("change",function(e){var s=e.target.value;w.formation=s,a(w)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
