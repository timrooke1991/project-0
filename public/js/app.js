"use strict";var _slicedToArray=function(){function o(o,e){var a=[],s=!0,r=!1,c=void 0;try{for(var t,l=o[Symbol.iterator]();!(s=(t=l.next()).done)&&(a.push(t.value),!e||a.length!==e);s=!0);}catch(o){r=!0,c=o}finally{try{!s&&l.return&&l.return()}finally{if(r)throw c}}return a}return function(e,a){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return o(e,a);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function o(){44===h&&(n.text("That's half-time!"),y=!y,m.text("Play")),90===h?(clearInterval(k),m.text("Finish")):(h++,l.text(h))}function e(o){return Math.floor(Math.random()*o)}function a(){var o=document.getElementById("homeBar");b=d.averagePlayerValues("attack")+e(10),o.style.width=b+"%"}function s(){return e(d.averagePlayerValues("attack"))>=e(g.averagePlayerValues("attack"))?(n.css("background-color",d.colors[0]),n.css("color",d.colors[1]),[d,"home"]):(n.css("background-color",g.colors[0]),n.css("color",g.colors[1]),[g,"away"])}function r(o){var e=Math.floor(Math.random()*o.players.length);return o.players[e]}function c(o,e){if(e.playing){var a=null,s=null;"home"===o?(s=i.text(),a=parseFloat(s)+1,i.text(a)):(s=u.text(),a=parseFloat(s)+1,u.text(a)),n.text("Goal!!!"),$("#"+o+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+h+" mins: "+e.name+" scored<br/>")}}function t(o,e){if(null===d){switch($(".home-team  .team-name").text(e),e){case"Tottenham":d=spurs,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Man United":d=manUnited,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Liverpool":d=liverpool,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Man City":d=manCity,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Everton":d=everton,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Chelsea":d=chelsea,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Leicester":d=leicester,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1]);break;case"Arsenal":d=arsenal,$(".home-team, #homeBar").css("background-color",d.colors[0]),$(".home-team").css("color",d.colors[1])}console.log(d)}else{switch($(".away-team .team-name").text(e),e){case"Tottenham":g=spurs,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Man United":g=manUnited,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Liverpool":g=liverpool,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Man City":g=manCity,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Everton":g=everton,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Chelsea":g=chelsea,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Leicester":g=leicester,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1]);break;case"Arsenal":g=arsenal,$(".away-team, .possession-bar").css("background-color",g.colors[0]),$(".away-team").css("color",g.colors[1])}console.log(g)}console.log(e)}var l=$(".changing-minutes"),n=$("#commentaryBox"),m=$(".primary-button"),i=$(".home-team .score"),u=$(".away-team .score"),h=0,y=!1,b=50,d=null,g=null,k=setInterval(function(){if(y){var t=e(100)+1,l=s(),n=_slicedToArray(l,2),m=n[0],i=n[1],u=r(m);console.log(u),t%2==0&&c(i,u),a(),o()}},200);$(".team-input").on("click",function(o){var e=o.target.innerHTML;console.log(o),null===d?(t(d,e),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(t(g,e),console.log("awayTeam now selected!"),$("#match-setup, .info-message").hide(),$("#match-engine, .away-team, .home-team, .timer").show())}),m.on("click",function(){y=!y,y?m.text("Pause"):m.text("Play")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
