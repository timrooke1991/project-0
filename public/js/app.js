"use strict";var _slicedToArray=function(){function e(e,a){var o=[],s=!0,t=!1,n=void 0;try{for(var r,l=e[Symbol.iterator]();!(s=(r=l.next()).done)&&(o.push(r.value),!a||o.length!==a);s=!0);}catch(e){t=!0,n=e}finally{try{!s&&l.return&&l.return()}finally{if(t)throw n}}return o}return function(a,o){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return e(a,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function e(e){$(".team-panel").html(""),$(".formation").val(e.formation),e.players.sort(function(e,a){return j.indexOf(e.position)<j.indexOf(a.position)?-1:1});for(var a=0;a<e.players.length;a++){var o=e.players[a],s=o.playing?"&#10004;":"&#10007;";$(".team-panel").append('<p class="player-line '+o.position+"\" id='"+o.name+'\'>\n        <span class="starting" id="'+a+'">'+s+'</span>\n        <span class="player-position ">'+o.position+'</span>\n        <span class="player-name">'+o.name+'</span>\n        <span class="player-stat">'+o.attack+'</span>\n        <span class="player-stat">'+o.defence+'</span>\n        <span class="player-stat">'+o.creativity+'</span>\n        <span class="player-stat">'+o.defence+"</span>\n        </p>")}}function a(){T&&(T=!T),v.text("Play"),$(".match-setup, .match-engine").hide(),e(F),x=F,o(x),$(".team-setup").show()}function o(e){$(".team-display").html("");var a=["1"].concat(e.formation.split("-")),o=0,s=0;try{a.map(function(a){for(var t=parseFloat(a),n=0;n<t;){if(e.players[o].playing){var r=j[s]!==e.players[o].position?"warning":"";$(".team-display").append("<span class='player-block "+r+" "+e.players[o].status+"'>"+e.players[o].name+"</span>"),e.players[o].chosenPosition=j[s],n++}console.log(o),o++}$(".team-display").append('<div class="seperate-players">'),s++})}catch(e){$(".team-display").append("<p class='team-selection-warning seperate-players'>Less than 11 players selected!</p>")}}function s(e,a){if(e.players[a].playing=!e.players[a].playing,o(x),e.players[a].playing){if($("#"+a).html("&#10004;"),z){console.log("clicked"),$("#"+a).parent().css({background:"green"});var s=e.players[a];t(e,s)}}else if($("#"+a).html("&#10007;"),z){$("#"+a).parent().css({"pointer-events":"none",background:"red"});var n=e.players[a];t(e,n)}}function t(e,a){e.subs<6?a.playing?($("#"+e.place+"Events").append("<i class='fa fa-arrow-right' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+a.name+" substituted<br/>"),e.subs+=1,a.playing=!1,a.status="ejected"):($("#"+e.place+"Events").append("<i class='fa fa-arrow-right' style='font-size: 22px; color:green; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+a.name+" substituted<br/>"),e.subs+=1,a.playing=!0):alert("You have had 3 subs!")}function n(){44===P&&(b.text("That's half-time!"),T=!T,v.text("Play")),90===P?(b.text("That's full-time!"),clearInterval(H),v.text("Finish")):(P++,g.text(P))}function r(e){return Math.floor(Math.random()*e)}function l(){var e=document.getElementById("homeBar");B=F.averagePlayerValues("creativity")/(F.averagePlayerValues("creativity")+E.averagePlayerValues("creativity"))*100+(Math.random()<.5?-r(6):r(6)),console.log(F.averagePlayerValues("creativity")),console.log(E.averagePlayerValues("creativity")),e.style.width=B+"%"}function i(){return r(F.averagePlayerValues("creativity"))>=r(E.averagePlayerValues("creativity"))?(b.css("background-color",F.colors[0]),b.css("color",F.colors[1]),r(20)%4==0&&b.text(f("chance","")),[F,"home",E]):(b.css("background-color",E.colors[0]),b.css("color",E.colors[1]),r(20)%4==0&&b.text(f("chance","")),[E,"away",F])}function c(e,a,o){var s=null,t=null,n=e.randomPlayer(),l=o.randomPlayerByPosition("defender");r(n.attack)>r(l.defence)&&("home"===a?(t=k.text(),s=parseFloat(t)+1,k.text(s)):(t=w.text(),s=parseFloat(t)+1,w.text(s)),f("goal",n),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+n.name+" scored<br/>"))}function p(e,o,s){console.log("YELLOW");var t=s.randomPlayer(),n="home"===o?"away":"home";r(t.discipline)+(100-P)<90&&("yellow"===t.status?(b.css("background-color","#FF0000"),b.css("color","#FFFFFF"),f("secondYellow",t),$("#"+n+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+t.name+" sent off<br/>"),t.status="injured","home"===s.place&&a()):(b.css("background-color","yellow"),b.css("color","#000000"),f("yellow",t),$("#"+n+"Events").append("\n          <i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+t.name+" booked<br/>"),t.status="yellow"))}function m(e,o){var s=e.randomPlayer();if(r(101)%8==0)if(f("injury",s),$("#"+o+"Events").append("<i class='fa fa-plus' style='font-size: 26px; color: green; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+s.name+" injured<br/>"),"away"===e.place){t(E,s);var n=E.randomSubstitute(s.position);t(E,n)}else"home"===e.place&&(s.status="ejected",s.playing=!1,a());else b.text(s.name+"'s limping, but he'll be okay")}function d(e,a,o){var s=e.randomPlayerByPosition("midfielder"),t=o.randomPlayerByPosition("goalkeeper").defence+o.averagePlayerValues("defender");if(s.attack>t){var n=null,r=null;"home"===a?(r=k.text(),n=parseFloat(r)+1,k.text(n)):(r=w.text(),n=parseFloat(r)+1,w.text(n)),f("freekick",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+s.name+" scored<br/>")}else f("wastedFreekick",s)}function h(e,a,o){var s=e.randomPlayerByPosition("striker"),t=o.randomPlayerByPosition("goalkeeper"),n=o.randomPlayerByPosition("defender"),l="home"===a?"away":"home";if(r(100)>25&&(n.status="yellow",$("#"+l+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+n.name+" booked<br/>")),2*r(s.attack)>r(t.defence)){var i=null,c=null;"home"===a?(c=k.text(),i=parseFloat(c)+1,k.text(i)):(c=w.text(),i=parseFloat(c)+1,w.text(i)),f("penalty",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+s.name+" scores penalty<br/>")}else f("missedPenalty",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+s.name+" missed penalty<br/>")}function u(e,o){var s=e.randomPlayer();if(r(s.discipline)<25){s.playing=!1;var t="home"===o?"away":"home";f("straightRed",s),$("#"+t+"Events").append("<i class='fa fa-square' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+P+" mins: "+s.name+" sent off<br/>"),"home"===e.place&&a()}}function y(e,a){if(null===F){switch($(".home-team  .team-name").text(a),a){case"Tottenham":F=spurs,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Man United":F=manUnited,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Liverpool":F=liverpool,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Man City":F=manCity,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Everton":F=everton,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Chelsea":F=chelsea,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Leicester":F=leicester,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1]);break;case"Arsenal":F=arsenal,$(".home-team, #homeBar").css("background-color",F.colors[0]),$(".home-team").css("color",F.colors[1])}F.place="home",console.log(F)}else{switch($(".away-team .team-name").text(a),a){case"Tottenham":E=spurs,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Man United":E=manUnited,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Liverpool":E=liverpool,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Man City":E=manCity,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Everton":E=everton,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Chelsea":E=chelsea,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Leicester":E=leicester,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1]);break;case"Arsenal":E=arsenal,$(".away-team, .possession-bar").css("background-color",E.colors[0]),$(".away-team").css("color",E.colors[1])}E.place="away",console.log(E)}console.log(a)}function f(e,a){var o={goal:["Goal!","He's scored!","That's a great finish!","What a goal by "+a.name,a.name+" finishes off the move!"],freekick:["It's a freekick",a.name+" to take the freekick","He lines up the freekick","This is a chance to get a cross in"],wastedFreekick:[a.name+" loses possession","That's ended up in row Z","The attack amounts to nothing",a.name+" has wasted that opportunity",a.name+"'s effort goes over the bar","He hands back possession to the other team"],yellow:["He's going in the book","Ouch! "+a.name+" will get a yellow for that","That's a booking","It's a yellow!","The ref is taking his name"],secondYellow:["He's already been booked...","That's a second yellow",a.name+" is shown a red!",a.name+" is off"],straightRed:[a.name+" is shown a straight red!",a.name+" is off","The ref has given him straight red!"],penalty:["The referee points to the spot","That's a penalty",a.name+" is fouled in the area","The ref blows his whistle. Penalty."],missedPenalty:["Saved!","It's over the bar",a.name+" has missed it!","Oh dear! "+a.name+"'s put it wide'"],injury:[a.name+"'s is going off",a.name+" is injured",a.name+" can't continue"],chance:["The ball is wasted","Possession is sloppily given away","That is wasted","The referee pulls back play","The ball goes out for a throw","Good interception!","He's robbed him of possesion"]},s=r(o[e].length),t=o[e][s];b.text(""+t)}var g=$(".changing-minutes"),b=$("#commentaryBox"),v=$(".primary-button"),k=$(".home-team .score"),w=$(".away-team .score"),x=null,P=0,T=!1,B=50,F=null,E=null,z=!1,j=["goalkeeper","defender","midfielder","striker"],H=setInterval(function(){if(T){var e=r(100)+1;console.log(P+": "+e);var a=i(),o=_slicedToArray(a,3),s=o[0],y=o[1],f=o[2];if(e%18==0&&c(s,y,f),e%80==0&&h(s,y,f),e%90==0&&u(f,y),e%22==0&&d(s,y,f),e%14==0&&p(s,y,f),e%10==0&&m(s,y),e%10==0&&E.subs<6&&P>50){var g=r(j.length)+1,b=j[g];if(console.log(g),console.log(b),j[g]){var v=E.randomPlayerByPosition(b);t(E,v);var $=E.randomSubstitute(b);t(E,$)}}l(),n()}},200);$(".team-input").on("click",function(e){var a=e.target.innerHTML;null===F?(y(F,a),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(y(E,a),console.log("awayTeam now selected!"),$(".title-message").text("Opponent selected. Now edit tactics or proceed to match."))}),$("#revealTeam").on("click",function(){o(x)}),$(".team-panel").on("click",function(e){var a=e.target.id;s(x,a)}),v.on("click",function(){T=!T,$("#match-setup, .info-message, .team-setup").hide(),$("#match-engine, .away-team, .home-team, .timer").show(),T?(v.text("Pause"),z=!0):v.text("Play")}),$("#homeTeam").on("click",function(){T&&(T=!T),v.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(F),x=F,o(x)}),$("#awayTeam").on("click",function(){T&&(T=!T),v.text("Play"),$(".match-setup, .match-engine").hide(),$(".team-setup").show(),e(E),x=E,o(x)}),$(".go-back").on("click",function(){$(".team-setup").hide(),$(".match-setup").show()}),$(".formation").on("change",function(e){var a=e.target.value;x.formation=a,o(x)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwic2V0dXBUYWN0aWNzIiwic2hvdyIsImh0bWwiLCJ2YWwiLCJ0ZWFtT2JqZWN0IiwiZm9ybWF0aW9uIiwibmV3Rm9ybWF0aW9uIiwiZSIsInRhcmdldCIsImEiLCJiIiwidGVhbVRhY3RpY3MiLCJwb3NpdGlvbnMiLCJpbmRleE9mIiwicG9zaXRpb24iLCJpIiwicGxheWVycyIsImxlbmd0aCIsInN0YXJ0aW5nRWxldmVuIiwicGxheWVyIiwicGxheWluZyIsImFwcGVuZCIsIm5hbWUiLCJkZWZlbmNlIiwiY3JlYXRpdml0eSIsInBhdXNlUGxheSIsInJ1biIsInRleHQiLCJoaWRlIiwicmV2ZWFsVGVhbSIsInBsYXllck51bWJlciIsImNvbmNhdCIsInNwbGl0IiwicG9zaXRpb25OdW1iZXIiLCJtYXAiLCJhcnJheUl0ZW0iLCJpdGVyYXRpb25zIiwid2FybmluZ01lc3NhZ2UiLCJjaG9zZW5Qb3NpdGlvbiIsInN0YXR1cyIsImVyciIsInNlbGVjdGVkUGxheWVyIiwiY29uc29sZSIsImNzcyIsInN1YnN0aXR1dGUiLCJwbGF5ZXJPbiIsImxvZyIsInBhcmVudCIsImJhY2tncm91bmQiLCJnYW1lU3RhcnRlZCIsInBsYXllck9mZiIsInBvaW50ZXItZXZlbnRzIiwic3VicyIsInBsYWNlIiwibWF0Y2hUaW1lIiwiYWxlcnQiLCJ0aW1lQ29udHJvbCIsIiRjb21tZW50YXJ5Qm94IiwiY2xlYXJJbnRlcnZhbCIsIiRwcmltYXJ5QnV0dG9uIiwiJG1hdGNoVGltZSIsInRpbWVySUQiLCJlbGVtIiwiZ2V0RWxlbWVudEJ5SWQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ2YWx1ZSIsImRvY3VtZW50Iiwid2lkdGgiLCJob21lUmFuZG9tIiwiZ2VuUmFuZG9tVmFsdWUiLCJob21lVGVhbSIsImF2ZXJhZ2VQbGF5ZXJWYWx1ZXMiLCJhd2F5VGVhbSIsImF3YXlSYW5kb20iLCJnZW5lcmF0ZUNvbW1lbnRhcnkiLCJjb2xvcnMiLCJzZWxlY3RQbGF5ZXIiLCJ0ZWFtIiwiZ2VuUmFuZG9tSW5kZXgiLCJhdHRhY2tpbmdQbGF5ZXIiLCJnZXRTY29yZSIsInNjb3JlIiwicGFyc2VGbG9hdCIsIiRob21lU2NvcmUiLCJyYW5kb21QbGF5ZXIiLCJkZWZlbmRpbmdQbGF5ZXIiLCJkZWZlbmRpbmdUZWFtIiwicmFuZG9tUGxheWVyQnlQb3NpdGlvbiIsImF0dGFjayIsIiRhd2F5U2NvcmUiLCJ0ZWFtU3RyaW5nIiwiYXR0YWNraW5nVGVhbSIsImRpc2NpcGxpbmUiLCJoYW5kbGVJbmp1cnkiLCJyYW5kb21TdWJzdGl0dXRlIiwiYWRkUGxheWVyIiwiaGFuZGxlRnJlZWtpY2siLCJkZWZlbmRpbmdWYWx1ZSIsImhhbmRsZVBlbmFsdHkiLCJib29rZWRQbGF5ZXIiLCJzdHJhaWdodFJlZCIsInNwdXJzIiwibWFuVW5pdGVkIiwiY29uZmlnVGVhbSIsInNlbGVjdG9yIiwibGl2ZXJwb29sIiwibWFuQ2l0eSIsImV2ZXJ0b24iLCJjaGVsc2VhIiwibGVpY2VzdGVyIiwiYXJzZW5hbCIsImNvbW1lbnRhcnkiLCJnb2FsIiwiZnJlZWtpY2siLCJzZWNvbmRZZWxsb3ciLCJpbmp1cnkiLCJtZXNzYWdlIiwic2NlbmFyaW8iLCJyYW5kb21JbmRleCIsIndhc3RlZEZyZWVraWNrIiwieWVsbG93IiwicGVuYWx0eSIsIm1pc3NlZFBlbmFsdHkiLCJjaGFuY2UiLCJldmVudFZhbHVlIiwic2V0SW50ZXJ2YWwiLCJzZWxlY3RUZWFtIiwiZ29hbENoYW5jZSIsImhhbmRsZURpc2NpcGxpbmUiLCJyYW5kb21Qb3NpdGlvbiIsIm9uIiwidXNlclRlYW0iLCJpbm5lckhUTUwiLCJtb3ZlIiwiaWQiLCJjaG9vc2VQbGF5ZXJzIl0sIm1hcHBpbmdzIjoibWNBQUFBLEdBQUUsV0FvSkVBLFFBQUVDLEdBQWdCQyxHQUZwQkYsRUFBQSxlQUFBRyxLQUFBLElBYUVILEVBQUUsY0FBY0ksSUFBSUMsRUFBV0MsV0FQL0JELEVBQU1FLFFBQWVDLEtBQUVDLFNBQXZC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VGJYLEVBQUEwRSxHQXFCRS9ELEVBQWMrRCxFQVJkN0MsRUFBRmxCLEtBR0daLEVBQUEsWUFBQXFJLEdBQUEsUUFBQSxXQUNEekUsRUFBQUEsZUFBZWhDLE9BQ2Y1QixFQUFFLGdCQUFBRSxTQUdGVSxFQUFBQSxjQUFjK0QsR0FBQUEsU0FBZCxTQUFBbkUsR0FDQXNCLEdBQUFBLEdBQVdsQixFQUFYSCxPQUFBMkQsS0FURnhELEdBQUFOLFVBQUFDLEVBb0JFdUIsRUFBV2xCIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoKCkgPT4ge1xuICBjb25zdCAkbWF0Y2hUaW1lID0gJCgnLmNoYW5naW5nLW1pbnV0ZXMnKTtcbiAgY29uc3QgJGNvbW1lbnRhcnlCb3ggPSAkKCcjY29tbWVudGFyeUJveCcpO1xuICBjb25zdCAkcHJpbWFyeUJ1dHRvbiA9ICQoJy5wcmltYXJ5LWJ1dHRvbicpO1xuICBjb25zdCAkaG9tZVNjb3JlID0gJCgnLmhvbWUtdGVhbSAuc2NvcmUnKTtcbiAgY29uc3QgJGF3YXlTY29yZSA9ICQoJy5hd2F5LXRlYW0gLnNjb3JlJyk7XG4gIC8vIGNvbnN0ICRob21lVGVhbSA9ICQoJy5ob21lLXRlYW0nKTtcbiAgLy8gY29uc3QgJGF3YXlUZWFtID0gJCgnLmF3YXktdGVhbScpO1xuICBsZXQgdGVhbVRhY3RpY3MgPSBudWxsO1xuXG4gIGxldCBtYXRjaFRpbWUgPSAwO1xuICBsZXQgcnVuID0gZmFsc2U7XG4gIGxldCB3aWR0aCA9IDUwO1xuICBsZXQgaG9tZVRlYW0gPSBudWxsO1xuICBsZXQgYXdheVRlYW0gPSBudWxsO1xuICBsZXQgZ2FtZVN0YXJ0ZWQgPSBmYWxzZTtcbiAgY29uc3QgcG9zaXRpb25zID0gWydnb2Fsa2VlcGVyJywgJ2RlZmVuZGVyJywgJ21pZGZpZWxkZXInLCAnc3RyaWtlciddO1xuXG4gIC8vIE1BVENIIExPR0lDXG4gIGNvbnN0IHRpbWVySUQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICBpZiAocnVuICkge1xuXG4gICAgICBjb25zdCBldmVudFZhbHVlID0gZ2VuUmFuZG9tVmFsdWUoMTAwKSArIDE7XG4gICAgICBjb25zb2xlLmxvZyhgJHttYXRjaFRpbWV9OiAke2V2ZW50VmFsdWV9YCk7XG5cbiAgICAgIC8vIENyZWF0aXZpdHkgU3VtQ3JlYXRpdml0eSB2cy4gU3VtQ3JlYXRpdml0eVxuICAgICAgY29uc3QgW2F0dGFja2luZ1RlYW0sIHRlYW1TdHJpbmcsIGRlZmVuZGluZ1RlYW1dID0gc2VsZWN0VGVhbSgpO1xuXG4gICAgICAvLyBjb25zdCBjaG9zZW5QbGF5ZXIgPSBzZWxlY3RQbGF5ZXIodGVhbU9iamVjdCk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhjaG9zZW5QbGF5ZXIpO1xuICAgICAgLy8gV2hvIGhhcyB0aGUgZXZlbnQ/XG4gICAgICBpZiAoZXZlbnRWYWx1ZSAlIDE4ID09PSAwKSB7XG4gICAgICAgIC8vIFJhbmRvbSAoU3RyaWtlciwgTWlkZmllbGRlcikgdnMuIEdvYWxrZWVwZXIgPiBSYW5kVGhlaXJBdHRhY2sgdnMuIFJhbmRHb2Fsa2VlcGVyXG4gICAgICAgIGdvYWxDaGFuY2UoYXR0YWNraW5nVGVhbSwgdGVhbVN0cmluZywgZGVmZW5kaW5nVGVhbSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudFZhbHVlICUgODAgPT09IDApIHtcbiAgICAgICAgLy8gU3RyaWtlciB2cy4gR29hbGtlZXBlciA+IFJhbmRUaGVpckF0dGFjayB2cy4gUmFuZEdvYWxrZWVwZXJQZW5hbHR5XG4gICAgICAgIGhhbmRsZVBlbmFsdHkoYXR0YWNraW5nVGVhbSwgdGVhbVN0cmluZywgZGVmZW5kaW5nVGVhbSk7XG4gICAgICB9XG4gICAgICAvL1xuICAgICAgaWYgKGV2ZW50VmFsdWUgJSA5MCA9PT0gMCkge1xuICAgICAgICAvLyBSYW5kb20gUGxheWVyID0+IERpc2NpcGxpbmUgPiByYW5kb21cbiAgICAgICAgc3RyYWlnaHRSZWQoZGVmZW5kaW5nVGVhbSwgdGVhbVN0cmluZyk7XG4gICAgICB9XG4gICAgICAvL1xuICAgICAgaWYgKGV2ZW50VmFsdWUgJSAyMiA9PT0gMCkge1xuICAgICAgICAvLyBTdHJpa2VyIHZzLiBHb2Fsa2VlcGVyID4gUmFuZFRoZWlyRnJlZWtpY2sgdnMuIFJhbmRHb2Fsa2VlcGVyUGVuYWx0eVxuICAgICAgICBoYW5kbGVGcmVla2ljayhhdHRhY2tpbmdUZWFtLCB0ZWFtU3RyaW5nLCBkZWZlbmRpbmdUZWFtKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50VmFsdWUgJSAxNCA9PT0gMCkge1xuICAgICAgICAvLyBSYW5kb21QbGF5ZXIgPT4gZGlzY2lwbGluZSArIG1hdGNodGltZSByYW5kIHZzLiByYW5kb21cbiAgICAgICAgaGFuZGxlRGlzY2lwbGluZShhdHRhY2tpbmdUZWFtLCB0ZWFtU3RyaW5nLCBkZWZlbmRpbmdUZWFtKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50VmFsdWUgJSAxMCA9PT0gMCkge1xuICAgICAgICBoYW5kbGVJbmp1cnkoYXR0YWNraW5nVGVhbSwgdGVhbVN0cmluZyk7XG4gICAgICB9XG5cbiAgICAgIGlmKHRydWUpIHtcbiAgICAgICAgaWYgKGV2ZW50VmFsdWUgJSAxMCA9PT0gMCAmJiBhd2F5VGVhbS5zdWJzIDwgNiAmJiBtYXRjaFRpbWUgPiA1MCkge1xuICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gZ2VuUmFuZG9tVmFsdWUocG9zaXRpb25zLmxlbmd0aCkgKyAxO1xuICAgICAgICAgIGNvbnN0IHJhbmRvbVBvc2l0aW9uID0gcG9zaXRpb25zW3JhbmRvbUluZGV4XTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhyYW5kb21JbmRleCk7XG4gICAgICAgICAgY29uc29sZS5sb2cocmFuZG9tUG9zaXRpb24pO1xuICAgICAgICAgIGlmIChwb3NpdGlvbnNbcmFuZG9tSW5kZXhdKSB7XG4gICAgICAgICAgICBjb25zdCByZW1vdmVQbGF5ZXIgPSBhd2F5VGVhbS5yYW5kb21QbGF5ZXJCeVBvc2l0aW9uKHJhbmRvbVBvc2l0aW9uKTtcbiAgICAgICAgICAgIHN1YnN0aXR1dGUoYXdheVRlYW0sIHJlbW92ZVBsYXllcik7XG4gICAgICAgICAgICBjb25zdCBhZGRQbGF5ZXIgPSBhd2F5VGVhbS5yYW5kb21TdWJzdGl0dXRlKHJhbmRvbVBvc2l0aW9uKTtcbiAgICAgICAgICAgIHN1YnN0aXR1dGUoYXdheVRlYW0sIGFkZFBsYXllcik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFJlZHVjZSBGaXRuZXNzXG4gICAgICBtb3ZlKCk7XG4gICAgICB0aW1lQ29udHJvbCgpO1xuICAgIH1cbiAgfSwyMDApO1xuXG4gIC8vIEV2ZW50IExpc3RlbmVycyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFRlYW0gc2VsZWN0aW9uXG4gICQoJy50ZWFtLWlucHV0Jykub24oJ2NsaWNrJywgKGUpID0+IHtcbiAgICBjb25zdCB1c2VyVGVhbSA9IGUudGFyZ2V0LmlubmVySFRNTDtcbiAgICBpZiAoaG9tZVRlYW0gPT09IG51bGwpIHtcbiAgICAgIGNvbmZpZ1RlYW0oaG9tZVRlYW0sIHVzZXJUZWFtKTtcbiAgICAgIGNvbnNvbGUubG9nKCdob21lVGVhbSBub3cgc2VsZWN0ZWQhJyk7XG4gICAgICAkKCcudGl0bGUtbWVzc2FnZScpLnRleHQoJ0hvbWUgdGVhbSBjaG9zZW4uIE5vdyBjaG9zZSB5b3VyIG9wcG9uZW50LicpO1xuICAgICAgLy8gZS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uZmlnVGVhbShhd2F5VGVhbSwgdXNlclRlYW0pO1xuICAgICAgY29uc29sZS5sb2coJ2F3YXlUZWFtIG5vdyBzZWxlY3RlZCEnKTtcbiAgICAgICQoJy50aXRsZS1tZXNzYWdlJykudGV4dCgnT3Bwb25lbnQgc2VsZWN0ZWQuIE5vdyBlZGl0IHRhY3RpY3Mgb3IgcHJvY2VlZCB0byBtYXRjaC4nKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIFN0YXJ0aW5nIExpbmUgVXBcbiAgJCgnI3JldmVhbFRlYW0nKS5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgcmV2ZWFsVGVhbSh0ZWFtVGFjdGljcyk7XG4gIH0pO1xuXG4gIC8vIFRvZ2dsZSB5ZXMvbm8gcGxheWluZ1xuICAkKCcudGVhbS1wYW5lbCcpLm9uKCdjbGljaycsIChlKSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRQbGF5ZXIgPSBlLnRhcmdldC5pZDtcbiAgICBjaG9vc2VQbGF5ZXJzKHRlYW1UYWN0aWNzLCBzZWxlY3RlZFBsYXllcik7XG4gIH0pO1xuXG4gICRwcmltYXJ5QnV0dG9uLm9uKCdjbGljaycsICgpID0+IHtcbiAgICBydW4gPSAhcnVuO1xuICAgICQoJyNtYXRjaC1zZXR1cCwgLmluZm8tbWVzc2FnZSwgLnRlYW0tc2V0dXAnKS5oaWRlKCk7XG4gICAgJCgnI21hdGNoLWVuZ2luZSwgLmF3YXktdGVhbSwgLmhvbWUtdGVhbSwgLnRpbWVyJykuc2hvdygpO1xuICAgIGlmIChydW4pIHtcbiAgICAgICRwcmltYXJ5QnV0dG9uLnRleHQoJ1BhdXNlJyk7XG4gICAgICBnYW1lU3RhcnRlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgICRwcmltYXJ5QnV0dG9uLnRleHQoJ1BsYXknKTtcbiAgICB9XG5cbiAgfSk7XG5cbiAgJCgnI2hvbWVUZWFtJykub24oJ2NsaWNrJywgKCkgPT4ge1xuICAgIGlmIChydW4pIHtcbiAgICAgIHJ1biA9ICFydW47XG4gICAgfVxuICAgICRwcmltYXJ5QnV0dG9uLnRleHQoJ1BsYXknKTtcbiAgICAkKCcubWF0Y2gtc2V0dXAsIC5tYXRjaC1lbmdpbmUnKS5oaWRlKCk7XG4gICAgJCgnLnRlYW0tc2V0dXAnKS5zaG93KCk7XG4gICAgc2V0dXBUYWN0aWNzKGhvbWVUZWFtKTtcbiAgICB0ZWFtVGFjdGljcyA9IGhvbWVUZWFtO1xuICAgIHJldmVhbFRlYW0odGVhbVRhY3RpY3MpO1xuXG4gIH0pO1xuXG4gICQoJyNhd2F5VGVhbScpLm9uKCdjbGljaycsICgpID0+IHtcbiAgICBpZiAocnVuKSB7XG4gICAgICBydW4gPSAhcnVuO1xuICAgIH1cbiAgICAkcHJpbWFyeUJ1dHRvbi50ZXh0KCdQbGF5Jyk7XG4gICAgJCgnLm1hdGNoLXNldHVwLCAubWF0Y2gtZW5naW5lJykuaGlkZSgpO1xuICAgICQoJy50ZWFtLXNldHVwJykuc2hvdygpO1xuICAgIHNldHVwVGFjdGljcyhhd2F5VGVhbSk7XG4gICAgdGVhbVRhY3RpY3MgPSBhd2F5VGVhbTtcbiAgICByZXZlYWxUZWFtKHRlYW1UYWN0aWNzKTtcbiAgfSk7XG5cbiAgJCgnLmdvLWJhY2snKS5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgJCgnLnRlYW0tc2V0dXAnKS5oaWRlKCk7XG4gICAgJCgnLm1hdGNoLXNldHVwJykuc2hvdygpO1xuICB9KTtcblxuICAkKCcuZm9ybWF0aW9uJykub24oJ2NoYW5nZScsIChlKSA9PiB7XG4gICAgY29uc3QgbmV3Rm9ybWF0aW9uID0gZS50YXJnZXQudmFsdWU7XG4gICAgdGVhbVRhY3RpY3MuZm9ybWF0aW9uID0gbmV3Rm9ybWF0aW9uO1xuICAgIHJldmVhbFRlYW0odGVhbVRhY3RpY3MpO1xuICB9KTtcblxuICBmdW5jdGlvbiBzZXR1cFRhY3RpY3ModGVhbU9iamVjdCkge1xuICAgICQoJy50ZWFtLXBhbmVsJykuaHRtbCgnJyk7XG4gICAgJCgnLmZvcm1hdGlvbicpLnZhbCh0ZWFtT2JqZWN0LmZvcm1hdGlvbik7XG5cbiAgICB0ZWFtT2JqZWN0LnBsYXllcnMuc29ydChmdW5jdGlvbihhLGIpe1xuICAgICAgcmV0dXJuIHBvc2l0aW9ucy5pbmRleE9mKGEucG9zaXRpb24pIDwgcG9zaXRpb25zLmluZGV4T2YoYi5wb3NpdGlvbikgPyAtMSA6IDE7XG4gICAgfSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRlYW1PYmplY3QucGxheWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcGxheWVyID0gdGVhbU9iamVjdC5wbGF5ZXJzW2ldO1xuICAgICAgY29uc3Qgc3RhcnRpbmdFbGV2ZW4gPSBwbGF5ZXIucGxheWluZyA/ICcmIzEwMDA0OycgOiAnJiMxMDAwNzsnO1xuXG4gICAgICAkKCcudGVhbS1wYW5lbCcpLmFwcGVuZChcbiAgICAgICAgYDxwIGNsYXNzPVwicGxheWVyLWxpbmUgJHtwbGF5ZXIucG9zaXRpb259XCIgaWQ9JyR7cGxheWVyLm5hbWV9Jz5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJzdGFydGluZ1wiIGlkPVwiJHtpfVwiPiR7c3RhcnRpbmdFbGV2ZW59PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInBsYXllci1wb3NpdGlvbiBcIj4ke3BsYXllci5wb3NpdGlvbn08L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwicGxheWVyLW5hbWVcIj4ke3BsYXllci5uYW1lfTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJwbGF5ZXItc3RhdFwiPiR7cGxheWVyLmF0dGFja308L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwicGxheWVyLXN0YXRcIj4ke3BsYXllci5kZWZlbmNlfTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJwbGF5ZXItc3RhdFwiPiR7cGxheWVyLmNyZWF0aXZpdHl9PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInBsYXllci1zdGF0XCI+JHtwbGF5ZXIuZGVmZW5jZX08L3NwYW4+XG4gICAgICAgIDwvcD5gXG4gICAgICApO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBwYXVzZVBsYXkoKSB7XG4gICAgaWYgKHJ1bikge1xuICAgICAgcnVuID0gIXJ1bjtcbiAgICB9XG5cbiAgICAkcHJpbWFyeUJ1dHRvbi50ZXh0KCdQbGF5Jyk7XG4gICAgJCgnLm1hdGNoLXNldHVwLCAubWF0Y2gtZW5naW5lJykuaGlkZSgpO1xuICAgIHNldHVwVGFjdGljcyhob21lVGVhbSk7XG4gICAgdGVhbVRhY3RpY3MgPSBob21lVGVhbTtcbiAgICByZXZlYWxUZWFtKHRlYW1UYWN0aWNzKTtcbiAgICAkKCcudGVhbS1zZXR1cCcpLnNob3coKTtcblxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZWFsVGVhbSh0ZWFtT2JqZWN0KSB7XG4gICAgJCgnLnRlYW0tZGlzcGxheScpLmh0bWwoJycpO1xuICAgIGNvbnN0IGZvcm1hdGlvbiA9IFsnMSddLmNvbmNhdCh0ZWFtT2JqZWN0LmZvcm1hdGlvbi5zcGxpdCgnLScpKTtcblxuICAgIGxldCBwbGF5ZXJOdW1iZXIgPSAwO1xuICAgIGxldCBwb3NpdGlvbk51bWJlciA9IDA7XG5cbiAgICB0cnkge1xuICAgICAgZm9ybWF0aW9uLm1hcCgoYXJyYXlJdGVtKSA9PiB7XG4gICAgICAgIGNvbnN0IGl0ZXJhdGlvbnMgPSBwYXJzZUZsb2F0KGFycmF5SXRlbSk7XG4gICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBpdGVyYXRpb25zKSB7XG4gICAgICAgICAgaWYgKHRlYW1PYmplY3QucGxheWVyc1twbGF5ZXJOdW1iZXJdLnBsYXlpbmcpIHtcbiAgICAgICAgICAgIGNvbnN0IHdhcm5pbmdNZXNzYWdlID0gcG9zaXRpb25zW3Bvc2l0aW9uTnVtYmVyXSAhPT0gdGVhbU9iamVjdC5wbGF5ZXJzW3BsYXllck51bWJlcl0ucG9zaXRpb24gPyAnd2FybmluZycgOiAnJztcbiAgICAgICAgICAgICQoJy50ZWFtLWRpc3BsYXknKS5hcHBlbmQoXG4gICAgICAgICAgICAgIGA8c3BhbiBjbGFzcz0ncGxheWVyLWJsb2NrICR7d2FybmluZ01lc3NhZ2V9ICR7KHRlYW1PYmplY3QucGxheWVyc1twbGF5ZXJOdW1iZXJdLnN0YXR1cyl9Jz4ke3RlYW1PYmplY3QucGxheWVyc1twbGF5ZXJOdW1iZXJdLm5hbWV9PC9zcGFuPmBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB0ZWFtT2JqZWN0LnBsYXllcnNbcGxheWVyTnVtYmVyXS5jaG9zZW5Qb3NpdGlvbiA9IHBvc2l0aW9uc1twb3NpdGlvbk51bWJlcl07XG4gICAgICAgICAgICBpKys7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnNvbGUubG9nKHBsYXllck51bWJlcik7XG4gICAgICAgICAgcGxheWVyTnVtYmVyKys7XG4gICAgICAgIH1cbiAgICAgICAgJCgnLnRlYW0tZGlzcGxheScpLmFwcGVuZCgnPGRpdiBjbGFzcz1cInNlcGVyYXRlLXBsYXllcnNcIj4nKTtcbiAgICAgICAgcG9zaXRpb25OdW1iZXIrKztcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAkKCcudGVhbS1kaXNwbGF5JykuYXBwZW5kKGA8cCBjbGFzcz0ndGVhbS1zZWxlY3Rpb24td2FybmluZyBzZXBlcmF0ZS1wbGF5ZXJzJz5MZXNzIHRoYW4gMTEgcGxheWVycyBzZWxlY3RlZCE8L3A+YCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2hvb3NlUGxheWVycyh0ZWFtT2JqZWN0LCBzZWxlY3RlZFBsYXllcikge1xuICAgIHRlYW1PYmplY3QucGxheWVyc1tzZWxlY3RlZFBsYXllcl0ucGxheWluZyA9ICF0ZWFtT2JqZWN0LnBsYXllcnNbc2VsZWN0ZWRQbGF5ZXJdLnBsYXlpbmc7XG4gICAgLy9jb25zb2xlLmxvZyh0ZWFtT2JqZWN0LnBsYXllcnNbc2VsZWN0ZWRQbGF5ZXJdLnBsYXlpbmcpO1xuICAgIHJldmVhbFRlYW0odGVhbVRhY3RpY3MpO1xuICAgIGlmICh0ZWFtT2JqZWN0LnBsYXllcnNbc2VsZWN0ZWRQbGF5ZXJdLnBsYXlpbmcpIHtcbiAgICAgICQoYCMke3NlbGVjdGVkUGxheWVyfWApLmh0bWwoJyYjMTAwMDQ7Jyk7XG4gICAgICBpZiAoZ2FtZVN0YXJ0ZWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2NsaWNrZWQnKTtcbiAgICAgICAgJChgIyR7c2VsZWN0ZWRQbGF5ZXJ9YCkucGFyZW50KCkuY3NzKHsnYmFja2dyb3VuZCc6ICdncmVlbid9KTtcbiAgICAgICAgY29uc3QgcGxheWVyT24gPSB0ZWFtT2JqZWN0LnBsYXllcnNbc2VsZWN0ZWRQbGF5ZXJdO1xuICAgICAgICBzdWJzdGl0dXRlKHRlYW1PYmplY3QsIHBsYXllck9uKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgJChgIyR7c2VsZWN0ZWRQbGF5ZXJ9YCkuaHRtbCgnJiMxMDAwNzsnKTtcbiAgICAgIGlmIChnYW1lU3RhcnRlZCkge1xuICAgICAgICAkKGAjJHtzZWxlY3RlZFBsYXllcn1gKS5wYXJlbnQoKS5jc3Moeydwb2ludGVyLWV2ZW50cyc6ICdub25lJywgJ2JhY2tncm91bmQnOiAncmVkJ30pO1xuICAgICAgICBjb25zdCBwbGF5ZXJPZmYgPSB0ZWFtT2JqZWN0LnBsYXllcnNbc2VsZWN0ZWRQbGF5ZXJdO1xuICAgICAgICBzdWJzdGl0dXRlKHRlYW1PYmplY3QsIHBsYXllck9mZik7XG5cbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIC8vIEZ1bmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgZnVuY3Rpb24gc3Vic3RpdHV0ZSh0ZWFtT2JqZWN0LCBwbGF5ZXIpIHtcbiAgICBpZiAodGVhbU9iamVjdC5zdWJzIDwgNikge1xuICAgICAgaWYgKHBsYXllci5wbGF5aW5nKSB7XG4gICAgICAgICQoYCMke3RlYW1PYmplY3QucGxhY2V9RXZlbnRzYCkuYXBwZW5kKGA8aSBjbGFzcz0nZmEgZmEtYXJyb3ctcmlnaHQnIHN0eWxlPSdmb250LXNpemU6IDIycHg7IGNvbG9yOnJlZDsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtwbGF5ZXIubmFtZX0gc3Vic3RpdHV0ZWQ8YnIvPmApO1xuICAgICAgICB0ZWFtT2JqZWN0LnN1YnMgKz0gMTtcbiAgICAgICAgcGxheWVyLnBsYXlpbmcgPSBmYWxzZTtcbiAgICAgICAgcGxheWVyLnN0YXR1cyA9ICdlamVjdGVkJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICQoYCMke3RlYW1PYmplY3QucGxhY2V9RXZlbnRzYCkuYXBwZW5kKGA8aSBjbGFzcz0nZmEgZmEtYXJyb3ctcmlnaHQnIHN0eWxlPSdmb250LXNpemU6IDIycHg7IGNvbG9yOmdyZWVuOyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke3BsYXllci5uYW1lfSBzdWJzdGl0dXRlZDxici8+YCk7XG4gICAgICAgIHRlYW1PYmplY3Quc3VicyArPSAxO1xuXG4gICAgICAgIHBsYXllci5wbGF5aW5nID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgYWxlcnQoJ1lvdSBoYXZlIGhhZCAzIHN1YnMhJyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdGltZUNvbnRyb2woKSB7XG5cbiAgICBpZihtYXRjaFRpbWUgPT09IDQ0KSB7XG4gICAgICAkY29tbWVudGFyeUJveC50ZXh0KGBUaGF0J3MgaGFsZi10aW1lIWApO1xuICAgICAgcnVuID0gIXJ1bjtcbiAgICAgICRwcmltYXJ5QnV0dG9uLnRleHQoJ1BsYXknKTtcbiAgICB9XG5cbiAgICBpZihtYXRjaFRpbWUgPT09IDkwKSB7XG4gICAgICAkY29tbWVudGFyeUJveC50ZXh0KGBUaGF0J3MgZnVsbC10aW1lIWApO1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcklEKTtcbiAgICAgICRwcmltYXJ5QnV0dG9uLnRleHQoJ0ZpbmlzaCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBtYXRjaFRpbWUrKztcbiAgICAgICRtYXRjaFRpbWUudGV4dChtYXRjaFRpbWUpO1xuICAgIH1cblxuICB9XG5cbiAgZnVuY3Rpb24gZ2VuUmFuZG9tVmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHZhbHVlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBtb3ZlKCkge1xuXG4gICAgLy8gTmVlZCB0byBzb3J0IHRoaXNcbiAgICBjb25zdCBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hvbWVCYXInKTtcblxuICAgIHdpZHRoID0gKGhvbWVUZWFtLmF2ZXJhZ2VQbGF5ZXJWYWx1ZXMoJ2NyZWF0aXZpdHknKSAvIChob21lVGVhbS5hdmVyYWdlUGxheWVyVmFsdWVzKCdjcmVhdGl2aXR5JykgKyBhd2F5VGVhbS5hdmVyYWdlUGxheWVyVmFsdWVzKCdjcmVhdGl2aXR5JykpICogMTAwKSArIChNYXRoLnJhbmRvbSgpIDwgMC41ID8gLWdlblJhbmRvbVZhbHVlKDYpIDogZ2VuUmFuZG9tVmFsdWUoNikpO1xuICAgIGNvbnNvbGUubG9nKGhvbWVUZWFtLmF2ZXJhZ2VQbGF5ZXJWYWx1ZXMoJ2NyZWF0aXZpdHknKSk7XG4gICAgY29uc29sZS5sb2coYXdheVRlYW0uYXZlcmFnZVBsYXllclZhbHVlcygnY3JlYXRpdml0eScpKTtcbiAgICBlbGVtLnN0eWxlLndpZHRoID0gd2lkdGggKyAnJSc7XG4gIH1cblxuICBmdW5jdGlvbiBzZWxlY3RUZWFtKCkge1xuICAgIGNvbnN0IGhvbWVSYW5kb20gPSAgZ2VuUmFuZG9tVmFsdWUoaG9tZVRlYW0uYXZlcmFnZVBsYXllclZhbHVlcygnY3JlYXRpdml0eScpKTtcbiAgICBjb25zdCBhd2F5UmFuZG9tID0gIGdlblJhbmRvbVZhbHVlKGF3YXlUZWFtLmF2ZXJhZ2VQbGF5ZXJWYWx1ZXMoJ2NyZWF0aXZpdHknKSk7XG5cbiAgICBpZiAoaG9tZVJhbmRvbSA+PSBhd2F5UmFuZG9tKSB7XG4gICAgICAkY29tbWVudGFyeUJveC5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdjb2xvcicsIGhvbWVUZWFtLmNvbG9yc1sxXSk7XG4gICAgICBpZiAoZ2VuUmFuZG9tVmFsdWUoMjApICUgNCA9PT0gMCkgJGNvbW1lbnRhcnlCb3gudGV4dChnZW5lcmF0ZUNvbW1lbnRhcnkoJ2NoYW5jZScsJycpKTtcbiAgICAgIHJldHVybiBbaG9tZVRlYW0sICdob21lJywgYXdheVRlYW1dO1xuICAgIH0gZWxzZSB7XG4gICAgICAkY29tbWVudGFyeUJveC5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICBpZiAoZ2VuUmFuZG9tVmFsdWUoMjApICUgNCA9PT0gMCkgJGNvbW1lbnRhcnlCb3gudGV4dChnZW5lcmF0ZUNvbW1lbnRhcnkoJ2NoYW5jZScsJycpKTtcbiAgICAgIHJldHVybiBbYXdheVRlYW0sICdhd2F5JywgaG9tZVRlYW1dO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNlbGVjdFBsYXllcih0ZWFtKSB7XG4gICAgY29uc3QgZ2VuUmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0ZWFtLnBsYXllcnMubGVuZ3RoKTtcbiAgICByZXR1cm4gdGVhbS5wbGF5ZXJzW2dlblJhbmRvbUluZGV4XTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvYWxDaGFuY2UoYXR0YWNraW5nVGVhbSwgdGVhbVN0cmluZywgZGVmZW5kaW5nVGVhbSkge1xuICAgIC8vIFJlZmFjdG9yIHRoaXNcbiAgICBsZXQgc2NvcmUgPSBudWxsO1xuICAgIGxldCBnZXRTY29yZSA9IG51bGw7XG4gICAgY29uc3QgYXR0YWNraW5nUGxheWVyID0gYXR0YWNraW5nVGVhbS5yYW5kb21QbGF5ZXIoKTtcbiAgICBjb25zdCBkZWZlbmRpbmdQbGF5ZXIgPSBkZWZlbmRpbmdUZWFtLnJhbmRvbVBsYXllckJ5UG9zaXRpb24oJ2RlZmVuZGVyJyk7XG5cbiAgICBpZiAoZ2VuUmFuZG9tVmFsdWUoYXR0YWNraW5nUGxheWVyLmF0dGFjaykgPiBnZW5SYW5kb21WYWx1ZShkZWZlbmRpbmdQbGF5ZXIuZGVmZW5jZSkpIHtcbiAgICAgIGlmICh0ZWFtU3RyaW5nID09PSAnaG9tZScpIHtcbiAgICAgICAgZ2V0U2NvcmUgPSAkaG9tZVNjb3JlLnRleHQoKTtcbiAgICAgICAgc2NvcmUgPSBwYXJzZUZsb2F0KGdldFNjb3JlKSArIDE7XG4gICAgICAgICRob21lU2NvcmUudGV4dChzY29yZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBnZXRTY29yZSA9ICRhd2F5U2NvcmUudGV4dCgpO1xuICAgICAgICBzY29yZSA9IHBhcnNlRmxvYXQoZ2V0U2NvcmUpICsgMTtcbiAgICAgICAgJGF3YXlTY29yZS50ZXh0KHNjb3JlKTtcbiAgICAgIH1cbiAgICAgIC8vJGNvbW1lbnRhcnlCb3gudGV4dChgR29hbCFgKTtcbiAgICAgIGdlbmVyYXRlQ29tbWVudGFyeSgnZ29hbCcsIGF0dGFja2luZ1BsYXllcik7XG5cbiAgICAgICQoYCMke3RlYW1TdHJpbmd9RXZlbnRzYCkuYXBwZW5kKGA8aSBjbGFzcz0nZmEgZmEtZnV0Ym9sLW8nIHN0eWxlPSdmb250LXNpemU6IDIycHg7IGNvbG9yOndoaXRlOyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke2F0dGFja2luZ1BsYXllci5uYW1lfSBzY29yZWQ8YnIvPmApO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZURpc2NpcGxpbmUoYXR0YWNraW5nVGVhbSwgdGVhbVN0cmluZywgZGVmZW5kaW5nVGVhbSkge1xuICAgIGNvbnNvbGUubG9nKCdZRUxMT1cnKTtcbiAgICBjb25zdCBkZWZlbmRpbmdQbGF5ZXIgPSBkZWZlbmRpbmdUZWFtLnJhbmRvbVBsYXllcigpO1xuICAgIGNvbnN0IHRlYW0gPSB0ZWFtU3RyaW5nID09PSAnaG9tZScgPyAnYXdheScgOiAnaG9tZSc7XG4gICAgaWYgKChnZW5SYW5kb21WYWx1ZShkZWZlbmRpbmdQbGF5ZXIuZGlzY2lwbGluZSkgKyAoMTAwLW1hdGNoVGltZSkpIDwgOTApIHtcbiAgICAgIC8vIEFscmVhZHkgYm9va2VkPyBTZW5kIGhpbSBvZmYhXG4gICAgICBpZiAoZGVmZW5kaW5nUGxheWVyLnN0YXR1cyA9PT0gJ3llbGxvdycpIHtcbiAgICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJyNGRjAwMDAnKTtcbiAgICAgICAgJGNvbW1lbnRhcnlCb3guY3NzKCdjb2xvcicsICcjRkZGRkZGJyk7XG5cbiAgICAgICAgZ2VuZXJhdGVDb21tZW50YXJ5KCdzZWNvbmRZZWxsb3cnLCBkZWZlbmRpbmdQbGF5ZXIpO1xuICAgICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLXNxdWFyZSBldmVudC1pdGVtJyBzdHlsZT0nZm9udC1zaXplOiAyNHB4OyBjb2xvcjogcmVkOyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke2RlZmVuZGluZ1BsYXllci5uYW1lfSBzZW50IG9mZjxici8+YCk7XG4gICAgICAgIGRlZmVuZGluZ1BsYXllci5zdGF0dXMgPSAnaW5qdXJlZCc7XG4gICAgICAgIC8vIGRlZmVuZGluZ1BsYXllci5zdGF0dXMgPSAnZWplY3RlZCc7XG4gICAgICAgIC8vIGRlZmVuZGluZ1BsYXllci5wbGF5aW5nID0gZmFsc2U7XG4gICAgICAgIGlmIChkZWZlbmRpbmdUZWFtLnBsYWNlID09PSAnaG9tZScpIHBhdXNlUGxheSgpO1xuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkY29tbWVudGFyeUJveC5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAneWVsbG93Jyk7XG4gICAgICAgICRjb21tZW50YXJ5Qm94LmNzcygnY29sb3InLCAnIzAwMDAwMCcpO1xuICAgICAgICAvLyAkY29tbWVudGFyeUJveC50ZXh0KGAke2RlZmVuZGluZ1BsYXllci5uYW1lfSBnZXRzIGEgeWVsbG93IWApO1xuICAgICAgICBnZW5lcmF0ZUNvbW1lbnRhcnkoJ3llbGxvdycsIGRlZmVuZGluZ1BsYXllcik7XG5cbiAgICAgICAgLy8gU3RvcmUgbWVzYWdlcyBhbmQgZGV0YWlscyBpbiBhbiBnYW1lIE9iamVjdFxuICAgICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgXG4gICAgICAgICAgPGkgY2xhc3M9J2ZhIGZhLXNxdWFyZSBldmVudC1pdGVtJyBzdHlsZT0nZm9udC1zaXplOiAyNHB4OyBjb2xvcjogeWVsbG93OyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke2RlZmVuZGluZ1BsYXllci5uYW1lfSBib29rZWQ8YnIvPmApO1xuICAgICAgICBkZWZlbmRpbmdQbGF5ZXIuc3RhdHVzID0gJ3llbGxvdyc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSW5qdXJ5KGF0dGFja2luZ1RlYW0sIHRlYW1TdHJpbmcpIHtcbiAgICBjb25zdCBhdHRhY2tpbmdQbGF5ZXIgPSBhdHRhY2tpbmdUZWFtLnJhbmRvbVBsYXllcigpO1xuICAgIC8vIFRIRVJFIENPVUxEIEJFIEFOIElOSlVSWVxuICAgIGlmIChnZW5SYW5kb21WYWx1ZSgxMDEpICUgOCA9PT0gMCkge1xuICAgICAgLy8gJGNvbW1lbnRhcnlCb3gudGV4dChgJHthdHRhY2tpbmdQbGF5ZXIubmFtZX0gZ2V0cyB0YWtlbiBvZmYgb24gYSBzdHJldGNoZXIhYCk7XG4gICAgICBnZW5lcmF0ZUNvbW1lbnRhcnkoJ2luanVyeScsIGF0dGFja2luZ1BsYXllcik7XG4gICAgICAkKGAjJHt0ZWFtU3RyaW5nfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLXBsdXMnIHN0eWxlPSdmb250LXNpemU6IDI2cHg7IGNvbG9yOiBncmVlbjsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHthdHRhY2tpbmdQbGF5ZXIubmFtZX0gaW5qdXJlZDxici8+YCk7XG4gICAgICBpZiAoYXR0YWNraW5nVGVhbS5wbGFjZSA9PT0gJ2F3YXknKSB7XG4gICAgICAgIHN1YnN0aXR1dGUoYXdheVRlYW0sIGF0dGFja2luZ1BsYXllcik7XG4gICAgICAgIGNvbnN0IGFkZFBsYXllciA9IGF3YXlUZWFtLnJhbmRvbVN1YnN0aXR1dGUoYXR0YWNraW5nUGxheWVyLnBvc2l0aW9uKTtcbiAgICAgICAgc3Vic3RpdHV0ZShhd2F5VGVhbSwgYWRkUGxheWVyKTtcbiAgICAgIH0gZWxzZSBpZiAoYXR0YWNraW5nVGVhbS5wbGFjZSA9PT0gJ2hvbWUnKSB7XG4gICAgICAgIGF0dGFja2luZ1BsYXllci5zdGF0dXMgPSAnZWplY3RlZCc7XG4gICAgICAgIGF0dGFja2luZ1BsYXllci5wbGF5aW5nID0gZmFsc2U7XG4gICAgICAgIHBhdXNlUGxheSgpO1xuICAgICAgfVxuICAgICAgLy8gYXR0YWNraW5nUGxheWVyLnBsYXlpbmcgPSBmYWxzZTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAkY29tbWVudGFyeUJveC50ZXh0KGAke2F0dGFja2luZ1BsYXllci5uYW1lfSdzIGxpbXBpbmcsIGJ1dCBoZSdsbCBiZSBva2F5YCk7XG4gICAgfVxuXG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVGcmVla2ljayhhdHRhY2tpbmdUZWFtLCB0ZWFtU3RyaW5nLCBkZWZlbmRpbmdUZWFtKSB7XG4gICAgY29uc3QgYXR0YWNraW5nUGxheWVyID0gYXR0YWNraW5nVGVhbS5yYW5kb21QbGF5ZXJCeVBvc2l0aW9uKCdtaWRmaWVsZGVyJyk7XG4gICAgY29uc3QgZGVmZW5kaW5nVmFsdWUgPSAoZGVmZW5kaW5nVGVhbS5yYW5kb21QbGF5ZXJCeVBvc2l0aW9uKCdnb2Fsa2VlcGVyJykuZGVmZW5jZSArIGRlZmVuZGluZ1RlYW0uYXZlcmFnZVBsYXllclZhbHVlcygnZGVmZW5kZXInKSk7XG5cbiAgICBpZiAoYXR0YWNraW5nUGxheWVyLmF0dGFjayA+IGRlZmVuZGluZ1ZhbHVlKSB7XG4gICAgICAvLyBSZWZhY3RvciB0aGlzXG4gICAgICBsZXQgc2NvcmUgPSBudWxsO1xuICAgICAgbGV0IGdldFNjb3JlID0gbnVsbDtcbiAgICAgIGlmICh0ZWFtU3RyaW5nID09PSAnaG9tZScpIHtcbiAgICAgICAgZ2V0U2NvcmUgPSAkaG9tZVNjb3JlLnRleHQoKTtcbiAgICAgICAgc2NvcmUgPSBwYXJzZUZsb2F0KGdldFNjb3JlKSArIDE7XG4gICAgICAgICRob21lU2NvcmUudGV4dChzY29yZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBnZXRTY29yZSA9ICRhd2F5U2NvcmUudGV4dCgpO1xuICAgICAgICBzY29yZSA9IHBhcnNlRmxvYXQoZ2V0U2NvcmUpICsgMTtcbiAgICAgICAgJGF3YXlTY29yZS50ZXh0KHNjb3JlKTtcbiAgICAgIH1cblxuICAgICAgLy8kY29tbWVudGFyeUJveC50ZXh0KGBJdCdzIGEgd29uZGVyIGdvYWwhIEdvYWwhYCk7XG4gICAgICBnZW5lcmF0ZUNvbW1lbnRhcnkoJ2ZyZWVraWNrJywgYXR0YWNraW5nUGxheWVyKTtcbiAgICAgICQoYCMke3RlYW1TdHJpbmd9RXZlbnRzYCkuYXBwZW5kKGA8aSBjbGFzcz0nZmEgZmEtZnV0Ym9sLW8nIHN0eWxlPSdmb250LXNpemU6IDIycHg7IGNvbG9yOndoaXRlOyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke2F0dGFja2luZ1BsYXllci5uYW1lfSBzY29yZWQ8YnIvPmApO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbmVyYXRlQ29tbWVudGFyeSgnd2FzdGVkRnJlZWtpY2snLCBhdHRhY2tpbmdQbGF5ZXIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBoYW5kbGVQZW5hbHR5KGF0dGFja2luZ1RlYW0sIHRlYW1TdHJpbmcsIGRlZmVuZGluZ1RlYW0pIHtcblxuICAgIGNvbnN0IGF0dGFja2luZ1BsYXllciA9IGF0dGFja2luZ1RlYW0ucmFuZG9tUGxheWVyQnlQb3NpdGlvbignc3RyaWtlcicpO1xuICAgIGNvbnN0IGRlZmVuZGluZ1BsYXllciA9IGRlZmVuZGluZ1RlYW0ucmFuZG9tUGxheWVyQnlQb3NpdGlvbignZ29hbGtlZXBlcicpO1xuICAgIGNvbnN0IGJvb2tlZFBsYXllciA9IGRlZmVuZGluZ1RlYW0ucmFuZG9tUGxheWVyQnlQb3NpdGlvbignZGVmZW5kZXInKTtcbiAgICBjb25zdCB0ZWFtID0gdGVhbVN0cmluZyA9PT0gJ2hvbWUnID8gJ2F3YXknIDogJ2hvbWUnO1xuICAgIC8vIEJvb2sgdGhlIHBsYXllcj9cbiAgICBpZiAoZ2VuUmFuZG9tVmFsdWUoMTAwKSA+IDI1KSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygnaGVyZScpO1xuICAgICAgYm9va2VkUGxheWVyLnN0YXR1cyA9ICd5ZWxsb3cnO1xuICAgICAgJChgIyR7dGVhbX1FdmVudHNgKS5hcHBlbmQoYDxpIGNsYXNzPSdmYSBmYS1zcXVhcmUgZXZlbnQtaXRlbScgc3R5bGU9J2ZvbnQtc2l6ZTogMjRweDsgY29sb3I6IHllbGxvdzsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtib29rZWRQbGF5ZXIubmFtZX0gYm9va2VkPGJyLz5gKTtcbiAgICB9XG5cbiAgICBpZiAoKGdlblJhbmRvbVZhbHVlKGF0dGFja2luZ1BsYXllci5hdHRhY2spKjIpID4gZ2VuUmFuZG9tVmFsdWUoZGVmZW5kaW5nUGxheWVyLmRlZmVuY2UpKSB7XG5cbiAgICAgIGxldCBzY29yZSA9IG51bGw7XG4gICAgICBsZXQgZ2V0U2NvcmUgPSBudWxsO1xuICAgICAgaWYgKHRlYW1TdHJpbmcgPT09ICdob21lJykge1xuICAgICAgICBnZXRTY29yZSA9ICRob21lU2NvcmUudGV4dCgpO1xuICAgICAgICBzY29yZSA9IHBhcnNlRmxvYXQoZ2V0U2NvcmUpICsgMTtcbiAgICAgICAgJGhvbWVTY29yZS50ZXh0KHNjb3JlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGdldFNjb3JlID0gJGF3YXlTY29yZS50ZXh0KCk7XG4gICAgICAgIHNjb3JlID0gcGFyc2VGbG9hdChnZXRTY29yZSkgKyAxO1xuICAgICAgICAkYXdheVNjb3JlLnRleHQoc2NvcmUpO1xuICAgICAgfVxuXG4gICAgICAvLyAkY29tbWVudGFyeUJveC50ZXh0KGAke2F0dGFja2luZ1BsYXllci5uYW1lfSdzIGNsaW5pY2FsIGZyb20gdGhlIHNwb3QhIEdvYWwhYCk7XG4gICAgICBnZW5lcmF0ZUNvbW1lbnRhcnkoJ3BlbmFsdHknLCBhdHRhY2tpbmdQbGF5ZXIpO1xuICAgICAgJChgIyR7dGVhbVN0cmluZ31FdmVudHNgKS5hcHBlbmQoYDxpIGNsYXNzPSdmYSBmYS1mdXRib2wtbycgc3R5bGU9J2ZvbnQtc2l6ZTogMjJweDsgY29sb3I6d2hpdGU7IHBhZGRpbmctdG9wOjVweCcgYXJpYS1oaWRkZW49J3RydWUnPjwvaT4gJHttYXRjaFRpbWV9IG1pbnM6ICR7YXR0YWNraW5nUGxheWVyLm5hbWV9IHNjb3JlcyBwZW5hbHR5PGJyLz5gKTtcblxuICAgIH0gZWxzZSB7XG4gICAgICBnZW5lcmF0ZUNvbW1lbnRhcnkoJ21pc3NlZFBlbmFsdHknLCBhdHRhY2tpbmdQbGF5ZXIpO1xuICAgICAgJChgIyR7dGVhbVN0cmluZ31FdmVudHNgKS5hcHBlbmQoYDxpIGNsYXNzPSdmYSBmYS1mdXRib2wtbycgc3R5bGU9J2ZvbnQtc2l6ZTogMjJweDsgY29sb3I6cmVkOyBwYWRkaW5nLXRvcDo1cHgnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+ICR7bWF0Y2hUaW1lfSBtaW5zOiAke2F0dGFja2luZ1BsYXllci5uYW1lfSBtaXNzZWQgcGVuYWx0eTxici8+YCk7XG5cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdHJhaWdodFJlZChkZWZlbmRpbmdUZWFtLCB0ZWFtU3RyaW5nKSB7XG4gICAgY29uc3QgZGVmZW5kaW5nUGxheWVyID0gZGVmZW5kaW5nVGVhbS5yYW5kb21QbGF5ZXIoKTtcbiAgICBpZiAoZ2VuUmFuZG9tVmFsdWUoZGVmZW5kaW5nUGxheWVyLmRpc2NpcGxpbmUpIDwgMjUpIHtcbiAgICAgIGRlZmVuZGluZ1BsYXllci5wbGF5aW5nID0gZmFsc2U7XG4gICAgICBjb25zdCB0ZWFtID0gdGVhbVN0cmluZyA9PT0gJ2hvbWUnID8gJ2F3YXknIDogJ2hvbWUnO1xuICAgICAgLy8gJGNvbW1lbnRhcnlCb3gudGV4dCgnVGhlIHJlZmVyZWUgZ2l2ZXMgaGltIGEgc3RyYWlnaHQgcmVkIScpO1xuICAgICAgZ2VuZXJhdGVDb21tZW50YXJ5KCdzdHJhaWdodFJlZCcsIGRlZmVuZGluZ1BsYXllcik7XG4gICAgICAkKGAjJHt0ZWFtfUV2ZW50c2ApLmFwcGVuZChgPGkgY2xhc3M9J2ZhIGZhLXNxdWFyZScgc3R5bGU9J2ZvbnQtc2l6ZTogMjRweDsgY29sb3I6IHJlZDsgcGFkZGluZy10b3A6NXB4JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiAke21hdGNoVGltZX0gbWluczogJHtkZWZlbmRpbmdQbGF5ZXIubmFtZX0gc2VudCBvZmY8YnIvPmApO1xuICAgICAgaWYgKGRlZmVuZGluZ1RlYW0ucGxhY2UgPT09ICdob21lJykgcGF1c2VQbGF5KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlnVGVhbSh0ZWFtLCBzZWxlY3Rvcikge1xuICAgIGlmIChob21lVGVhbSA9PT0gbnVsbCkge1xuICAgICAgJCgnLmhvbWUtdGVhbSAgLnRlYW0tbmFtZScpLnRleHQoc2VsZWN0b3IpO1xuICAgICAgc3dpdGNoIChzZWxlY3Rvcikge1xuICAgICAgICBjYXNlICdUb3R0ZW5oYW0nOlxuICAgICAgICAgIGhvbWVUZWFtID0gc3B1cnM7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTWFuIFVuaXRlZCc6XG4gICAgICAgICAgaG9tZVRlYW0gPSBtYW5Vbml0ZWQ7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTGl2ZXJwb29sJzpcbiAgICAgICAgICBob21lVGVhbSA9IGxpdmVycG9vbDtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtLCAjaG9tZUJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGhvbWVUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbScpLmNzcygnY29sb3InLCBob21lVGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdNYW4gQ2l0eSc6XG4gICAgICAgICAgaG9tZVRlYW0gPSBtYW5DaXR5O1xuICAgICAgICAgICQoJy5ob21lLXRlYW0sICNob21lQmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgaG9tZVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtJykuY3NzKCdjb2xvcicsIGhvbWVUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0V2ZXJ0b24nOlxuICAgICAgICAgIGhvbWVUZWFtID0gZXZlcnRvbjtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtLCAjaG9tZUJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGhvbWVUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbScpLmNzcygnY29sb3InLCBob21lVGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdDaGVsc2VhJzpcbiAgICAgICAgICBob21lVGVhbSA9IGNoZWxzZWE7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTGVpY2VzdGVyJzpcbiAgICAgICAgICBob21lVGVhbSA9IGxlaWNlc3RlcjtcbiAgICAgICAgICAkKCcuaG9tZS10ZWFtLCAjaG9tZUJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGhvbWVUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbScpLmNzcygnY29sb3InLCBob21lVGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdBcnNlbmFsJzpcbiAgICAgICAgICBob21lVGVhbSA9IGFyc2VuYWw7XG4gICAgICAgICAgJCgnLmhvbWUtdGVhbSwgI2hvbWVCYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBob21lVGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5ob21lLXRlYW0nKS5jc3MoJ2NvbG9yJywgaG9tZVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGhvbWVUZWFtLnBsYWNlID0gJ2hvbWUnO1xuICAgICAgY29uc29sZS5sb2coaG9tZVRlYW0pO1xuICAgIH0gZWxzZSB7XG5cbiAgICAgICQoJy5hd2F5LXRlYW0gLnRlYW0tbmFtZScpLnRleHQoc2VsZWN0b3IpO1xuXG4gICAgICBzd2l0Y2ggKHNlbGVjdG9yKSB7XG4gICAgICAgIGNhc2UgJ1RvdHRlbmhhbSc6XG4gICAgICAgICAgYXdheVRlYW0gPSBzcHVycztcbiAgICAgICAgICAkKCcuYXdheS10ZWFtLCAucG9zc2Vzc2lvbi1iYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0nKS5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnTWFuIFVuaXRlZCc6XG4gICAgICAgICAgYXdheVRlYW0gPSBtYW5Vbml0ZWQ7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbSwgLnBvc3Nlc3Npb24tYmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYXdheVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtJykuY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0xpdmVycG9vbCc6XG4gICAgICAgICAgYXdheVRlYW0gPSBsaXZlcnBvb2w7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbSwgLnBvc3Nlc3Npb24tYmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYXdheVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtJykuY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ01hbiBDaXR5JzpcbiAgICAgICAgICBhd2F5VGVhbSA9IG1hbkNpdHk7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbSwgLnBvc3Nlc3Npb24tYmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYXdheVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtJykuY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0V2ZXJ0b24nOlxuICAgICAgICAgIGF3YXlUZWFtID0gZXZlcnRvbjtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtLCAucG9zc2Vzc2lvbi1iYXInKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMF0pO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0nKS5jc3MoJ2NvbG9yJywgYXdheVRlYW0uY29sb3JzWzFdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnQ2hlbHNlYSc6XG4gICAgICAgICAgYXdheVRlYW0gPSBjaGVsc2VhO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0sIC5wb3NzZXNzaW9uLWJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGF3YXlUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbScpLmNzcygnY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdMZWljZXN0ZXInOlxuICAgICAgICAgIGF3YXlUZWFtID0gbGVpY2VzdGVyO1xuICAgICAgICAgICQoJy5hd2F5LXRlYW0sIC5wb3NzZXNzaW9uLWJhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIGF3YXlUZWFtLmNvbG9yc1swXSk7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbScpLmNzcygnY29sb3InLCBhd2F5VGVhbS5jb2xvcnNbMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdBcnNlbmFsJzpcbiAgICAgICAgICBhd2F5VGVhbSA9IGFyc2VuYWw7XG4gICAgICAgICAgJCgnLmF3YXktdGVhbSwgLnBvc3Nlc3Npb24tYmFyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYXdheVRlYW0uY29sb3JzWzBdKTtcbiAgICAgICAgICAkKCcuYXdheS10ZWFtJykuY3NzKCdjb2xvcicsIGF3YXlUZWFtLmNvbG9yc1sxXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBhd2F5VGVhbS5wbGFjZSA9ICdhd2F5JztcbiAgICAgIGNvbnNvbGUubG9nKGF3YXlUZWFtKTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyhzZWxlY3Rvcik7XG4gICAgLy8gUGFzcyBpbiB0aGUgb2JqZWN0IHZhbHVlcyB0byBob21lVGVhbVxuICB9XG5cbiAgZnVuY3Rpb24gZ2VuZXJhdGVDb21tZW50YXJ5KHNjZW5hcmlvLCBwbGF5ZXIpIHtcbiAgICBjb25zdCBjb21tZW50YXJ5ID0ge1xuICAgICAgZ29hbDogWydHb2FsIScsICdIZVxcJ3Mgc2NvcmVkIScsIGBUaGF0J3MgYSBncmVhdCBmaW5pc2ghYCwgYFdoYXQgYSBnb2FsIGJ5ICR7cGxheWVyLm5hbWV9YCwgYCR7cGxheWVyLm5hbWV9IGZpbmlzaGVzIG9mZiB0aGUgbW92ZSFgXSxcbiAgICAgIGZyZWVraWNrOiBbYEl0J3MgYSBmcmVla2lja2AsIGAke3BsYXllci5uYW1lfSB0byB0YWtlIHRoZSBmcmVla2lja2AsIGBIZSBsaW5lcyB1cCB0aGUgZnJlZWtpY2tgLCBgVGhpcyBpcyBhIGNoYW5jZSB0byBnZXQgYSBjcm9zcyBpbmBdLFxuICAgICAgd2FzdGVkRnJlZWtpY2s6IFtgJHtwbGF5ZXIubmFtZX0gbG9zZXMgcG9zc2Vzc2lvbmAsIGBUaGF0J3MgZW5kZWQgdXAgaW4gcm93IFpgLCBgVGhlIGF0dGFjayBhbW91bnRzIHRvIG5vdGhpbmdgLCBgJHtwbGF5ZXIubmFtZX0gaGFzIHdhc3RlZCB0aGF0IG9wcG9ydHVuaXR5YCwgYCR7cGxheWVyLm5hbWV9J3MgZWZmb3J0IGdvZXMgb3ZlciB0aGUgYmFyYCwgYEhlIGhhbmRzIGJhY2sgcG9zc2Vzc2lvbiB0byB0aGUgb3RoZXIgdGVhbWBdLFxuICAgICAgeWVsbG93OiBbYEhlJ3MgZ29pbmcgaW4gdGhlIGJvb2tgLCBgT3VjaCEgJHtwbGF5ZXIubmFtZX0gd2lsbCBnZXQgYSB5ZWxsb3cgZm9yIHRoYXRgLCBgVGhhdCdzIGEgYm9va2luZ2AsIGBJdCdzIGEgeWVsbG93IWAsIGBUaGUgcmVmIGlzIHRha2luZyBoaXMgbmFtZWBdLFxuICAgICAgc2Vjb25kWWVsbG93OiBbYEhlJ3MgYWxyZWFkeSBiZWVuIGJvb2tlZC4uLmAsIGBUaGF0J3MgYSBzZWNvbmQgeWVsbG93YCwgYCR7cGxheWVyLm5hbWV9IGlzIHNob3duIGEgcmVkIWAsIGAke3BsYXllci5uYW1lfSBpcyBvZmZgXSxcbiAgICAgIHN0cmFpZ2h0UmVkOiBbYCR7cGxheWVyLm5hbWV9IGlzIHNob3duIGEgc3RyYWlnaHQgcmVkIWAsIGAke3BsYXllci5uYW1lfSBpcyBvZmZgLCBgVGhlIHJlZiBoYXMgZ2l2ZW4gaGltIHN0cmFpZ2h0IHJlZCFgXSxcbiAgICAgIHBlbmFsdHk6IFtgVGhlIHJlZmVyZWUgcG9pbnRzIHRvIHRoZSBzcG90YCwgYFRoYXQncyBhIHBlbmFsdHlgLCBgJHtwbGF5ZXIubmFtZX0gaXMgZm91bGVkIGluIHRoZSBhcmVhYCwgYFRoZSByZWYgYmxvd3MgaGlzIHdoaXN0bGUuIFBlbmFsdHkuYF0sXG4gICAgICBtaXNzZWRQZW5hbHR5OiBbYFNhdmVkIWAsIGBJdCdzIG92ZXIgdGhlIGJhcmAsIGAke3BsYXllci5uYW1lfSBoYXMgbWlzc2VkIGl0IWAsIGBPaCBkZWFyISAke3BsYXllci5uYW1lfSdzIHB1dCBpdCB3aWRlJ2BdLFxuICAgICAgaW5qdXJ5OiBbYCR7cGxheWVyLm5hbWV9J3MgaXMgZ29pbmcgb2ZmYCxgJHtwbGF5ZXIubmFtZX0gaXMgaW5qdXJlZGAsYCR7cGxheWVyLm5hbWV9IGNhbid0IGNvbnRpbnVlYF0sXG4gICAgICBjaGFuY2U6IFtgVGhlIGJhbGwgaXMgd2FzdGVkYCwgYFBvc3Nlc3Npb24gaXMgc2xvcHBpbHkgZ2l2ZW4gYXdheWAsIGBUaGF0IGlzIHdhc3RlZGAsIGBUaGUgcmVmZXJlZSBwdWxscyBiYWNrIHBsYXlgLCBgVGhlIGJhbGwgZ29lcyBvdXQgZm9yIGEgdGhyb3dgLCBgR29vZCBpbnRlcmNlcHRpb24hYCwgYEhlJ3Mgcm9iYmVkIGhpbSBvZiBwb3NzZXNpb25gXVxuICAgIH07XG4gICAgY29uc3QgcmFuZG9tSW5kZXggPSBnZW5SYW5kb21WYWx1ZShjb21tZW50YXJ5W3NjZW5hcmlvXS5sZW5ndGgpO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBjb21tZW50YXJ5W3NjZW5hcmlvXVtyYW5kb21JbmRleF07XG4gICAgJGNvbW1lbnRhcnlCb3gudGV4dChgJHttZXNzYWdlfWApO1xuXG4gIH1cblxufSk7XG4iXX0=
