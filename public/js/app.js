"use strict";var _slicedToArray=function(){function e(e,a){var o=[],s=!0,t=!1,r=void 0;try{for(var n,l=e[Symbol.iterator]();!(s=(n=l.next()).done)&&(o.push(n.value),!a||o.length!==a);s=!0);}catch(e){t=!0,r=e}finally{try{!s&&l.return&&l.return()}finally{if(t)throw r}}return o}return function(a,o){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return e(a,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(function(){function e(){44===g&&(h.text("That's half-time!"),b=!b,y.text("Play")),90===g?(h.text("That's full-time!"),clearInterval(x),y.text("Finish")):(g++,d.text(g))}function a(e){return Math.floor(Math.random()*e)}function o(){var e=document.getElementById("homeBar");k=v.averagePlayerValues("creativity")/w.averagePlayerValues("creativity")*100,console.log(v.averagePlayerValues("creativity")),console.log(w.averagePlayerValues("creativity")),console.log(k),e.style.width=k+"%"}function s(){return a(v.averagePlayerValues("creativity"))>=a(w.averagePlayerValues("creativity"))?(h.css("background-color",v.colors[0]),h.css("color",v.colors[1]),a(10)%2==0&&h.text(p("chance","")),[v,"home",w]):(h.css("background-color",w.colors[0]),h.css("color",w.colors[1]),a(10)%2==0&&h.text(p("chance","")),[w,"away",v])}function t(e,o,s){var t=null,r=null,n=e.randomPlayer(),l=s.randomPlayerByPosition("defender");a(n.attack)>a(l.defence)&&("home"===o?(r=u.text(),t=parseFloat(r)+1,u.text(t)):(r=f.text(),t=parseFloat(r)+1,f.text(t)),p("goal",n),$("#"+o+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+n.name+" scored<br/>"))}function r(e,o,s){console.log("YELLOW");var t=s.randomPlayer(),r="home"===o?"away":"home";a(t.discipline)+(100-g)<90&&("Yellow"===t.status?(h.css("background-color","#FF0000"),h.css("color","#FFFFFF"),p("secondYellow",t),$("#"+r+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+t.name+" sent off<br/>"),t.status="Ejected",t.playing=!1):(h.css("background-color","yellow"),h.css("color","#000000"),p("yellow",t),$("#"+r+"Events").append("\n          <i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+t.name+" booked<br/>"),t.status="Yellow"))}function n(e,o){var s=e.randomPlayer();a(101)%8==0?(p("injury",s),$("#"+o+"Events").append("<i class='fa fa-plus' style='font-size: 26px; color: green; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+s.name+" injured<br/>"),s.playing=!1):h.text(s.name+"'s limping, but he'll be okay")}function l(e,a,o){var s=e.randomPlayerByPosition("midfielder"),t=o.randomPlayerByPosition("goalkeeper").defence+o.averagePlayerValues("defender");if(s.attack>t){var r=null,n=null;"home"===a?(n=u.text(),r=parseFloat(n)+1,u.text(r)):(n=f.text(),r=parseFloat(n)+1,f.text(r)),p("freekick",s),$("#"+a+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+s.name+" scored<br/>")}else p("wastedFreekick",s)}function c(e,o,s){var t=e.randomPlayerByPosition("striker"),r=s.randomPlayerByPosition("goalkeeper"),n=s.randomPlayerByPosition("defender"),l="home"===o?"away":"home";if(a(100)>25&&(n.status="Yellow",$("#"+l+"Events").append("<i class='fa fa-square event-item' style='font-size: 24px; color: yellow; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+n.name+" booked<br/>")),2*a(t.attack)>a(r.defence)){var c=null,i=null;"home"===o?(i=u.text(),c=parseFloat(i)+1,u.text(c)):(i=f.text(),c=parseFloat(i)+1,f.text(c)),p("penalty",t),$("#"+o+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:white; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+t.name+" scores penalty<br/>")}else h.text("He's missed it! The pressure has got to him"),$("#"+o+"Events").append("<i class='fa fa-futbol-o' style='font-size: 22px; color:red; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+t.name+" missed penalty<br/>")}function i(e,o){var s=e.randomPlayer();if(a(s.discipline)>75){s.playing=!1;var t="home"===o?"away":"home";p("straightRed",s),$("#"+t+"Events").append("<i class='fa fa-square' style='font-size: 24px; color: red; padding-top:5px' aria-hidden='true'></i> "+g+" mins: "+s.name+" sent off<br/>")}}function m(e,a){if(null===v){switch($(".home-team  .team-name").text(a),a){case"Tottenham":v=spurs,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Man United":v=manUnited,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Liverpool":v=liverpool,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Man City":v=manCity,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Everton":v=everton,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Chelsea":v=chelsea,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Leicester":v=leicester,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1]);break;case"Arsenal":v=arsenal,$(".home-team, #homeBar").css("background-color",v.colors[0]),$(".home-team").css("color",v.colors[1])}console.log(v)}else{switch($(".away-team .team-name").text(a),a){case"Tottenham":w=spurs,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Man United":w=manUnited,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Liverpool":w=liverpool,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Man City":w=manCity,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Everton":w=everton,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Chelsea":w=chelsea,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Leicester":w=leicester,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1]);break;case"Arsenal":w=arsenal,$(".away-team, .possession-bar").css("background-color",w.colors[0]),$(".away-team").css("color",w.colors[1])}console.log(w)}console.log(a)}function p(e,o){var s={goal:["Goal!","He's scored!","That's a great finish!","What a goal by "+o.name,o.name+" finishes off the move!"],freekick:["It's a freekick",o.name+" to take the freekick","He lines up the freekick","This is a chance to get a cross in"],wastedFreekick:[o.name+" loses possession","That's ended up in row Z","The attack amounts to nothing",o.name+" has wasted that opportunity",o.name+"'s effort goes over the bar","He hands back possession to the other team"],yellow:["He's going in the book","Ouch! "+o.name+"'ll a yellow for that","That's a booking","It's a yellow!","The ref is taking his name"],secondYellow:["He's already been booked...","That's a second yellow",o.name+" is shown a red!",o.name+" is off"],straightRed:[o.name+" is shown a straight red!",o.name+" is off","The ref has given him straight red!"],penalty:["The referee points to the spot","That's a penalty",o.name+" is fouled in the area","The ref blows his whistle. Penalty."],injury:[o.name+"'s is going off",o.name+" is injured",o.name+" can't continue"],chance:["The ball is wasted","Possession is sloppily given away","That is wasted","The referee pulls back play","The ball goes out for a throw","Good interception!","He's robbed him of possesion"]},t=a(s[e].length),r=s[e][t];h.text(""+r)}var d=$(".changing-minutes"),h=$("#commentaryBox"),y=$(".primary-button"),u=$(".home-team .score"),f=$(".away-team .score"),g=0,b=!1,k=50,v=null,w=null,x=setInterval(function(){if(b){var m=a(100)+1;console.log(g+": "+m);var p=s(),d=_slicedToArray(p,3),h=d[0],y=d[1],u=d[2];m%18==0&&t(h,y,u),m%80==0&&c(h,y,u),m%90==0&&i(u,y),m%22==0&&l(h,y,u),m%14==0&&r(h,y,u),m%60==0&&n(h,y),o(),e()}},200);$(".team-input").on("click",function(e){var a=e.target.innerHTML;null===v?(m(v,a),console.log("homeTeam now selected!"),$(".title-message").text("Home team chosen. Now chose your opponent.")):(m(w,a),console.log("awayTeam now selected!"),$("#match-setup, .info-message").hide(),$("#match-engine, .away-team, .home-team, .timer").show())}),$("#revealTeam").on("click",function(){$(".team-display").html("");var e=["1"].concat(v.formation.split("-")),a=["goalkeeper","defender","midfielder","striker"],o=0,s=0;try{e.map(function(e){for(var t=parseFloat(e),r=0;r<t;)v.players[o].playing&&($(".team-display").append("<p>"+a[s]+": "+v.players[o].name+"</p>"),v.players[o].chosenPosition=a[s],r++),console.log(o),o++;$(".team-display").append("<hr>"),s++})}catch(e){alert("Select 11 players!")}}),$(".player-selection-box button").on("click",function(){$(".team-panel").html("");var e=["goalkeeper","defender","midfielder","striker"];v.players.sort(function(a,o){return e.indexOf(a.position)<e.indexOf(o.position)?-1:1});for(var a=0;a<v.players.length;a++){var o=v.players[a],s=o.playing?"&#10004;":"&#10007;";$(".team-panel").append('<p class="player-line" id=\''+o.name+'\'>\n          <span class="starting" id="'+a+'">'+s+'</span>\n          <span class="player-name">'+o.position+" "+o.name+'</span>\n          <span class="player-stat">'+o.attack+'</span>\n          <span class="player-stat">'+o.defence+"</span>\n        </p>")}}),$(".team-panel").on("click",function(e){var a=e.target.id;v.players[a].playing=!v.players[a].playing,console.log(v.players[a].playing),v.players[a].playing?$("#"+a).html("&#10004;"):$("#"+a).html("&#10007;")}),y.on("click",function(){b=!b,b?y.text("Pause"):y.text("Play")}),$(".select-btn").on("click",function(){$(".match-setup").hide(),$(".team-setup").show()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
